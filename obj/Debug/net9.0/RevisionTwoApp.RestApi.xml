<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RevisionTwoApp.RestApi</name>
    </assembly>
    <members>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel">
            <summary>
            Represents the page model for creating new sales orders in the application.
            </summary>
            <remarks>This class provides properties and methods to manage the creation of sales orders, including handling
            user input, interacting with the database, and integrating with external APIs. It supports both GET and POST
            operations for initializing and submitting sales order data.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel})">
            <summary>
            Represents the page model for creating new sales orders in the application.
            </summary>
            <remarks>This class provides properties and methods to manage the creation of sales orders, including handling
            user input, interacting with the database, and integrating with external APIs. It supports both GET and POST
            operations for initializing and submitting sales order data.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel._logger">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel"/> class.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.SiteCredential">
            <summary>
            Represents the credentials required to access the site.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.Selected_SalesOrder_Types">
            <summary>
            Gets the list of sales order types available for selection.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.Selected_SalesOrder_Statuses">
            <summary>
            Gets a list of selectable sales order statuses for use in UI components.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.Selected_SalesOrder_Customers">
            <summary>
            Gets a list of customers available for selection in a sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.SalesOrders">
            <summary>
            Gets or sets the collection of sales orders associated with the application.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.SalesOrder">
            <summary>
            Gets or sets the sales order associated with the current operation.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.Date">
            <summary>
            Gets or sets the date value associated with the current operation.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.InventoryID">
            <summary>
            Gets or sets the unique identifier for the inventory item.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.OnGetAsync">
            <summary>  
            Handles GET requests for the page and initializes data required for rendering.  
            </summary>  
            <remarks>This method retrieves the current list of sales orders from the database and populates the   
            <see cref="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.Selected_SalesOrder_Customers"/> collection with customer information for use in the UI. If no sales  
            orders exist, an error is logged and the page is returned without additional data.</remarks>  
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Typically, this will return the page   
            to the caller.</returns>  
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.CreateModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to create a new sales order.
            </summary>
            <remarks>This method performs several operations, including validating the model state, retrieving sales
            orders from the database,  adjusting sales order values, and interacting with an external API to create and post the
            sales order.  If the operation is successful, the new sales order is added to the database and the user is
            redirected to the index page. If any errors occur during the process, the method logs the error and returns the
            current page.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.  Returns a <see
            cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> if the sales order is successfully created and posted;  otherwise, returns a <see
            cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageResult"/> indicating an error or invalid state.</returns>
            <exception cref="T:System.NullReferenceException">Thrown if required objects, such as the API client or business account, are null during the operation.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel">
            <summary>
            Delete a new Sales Order
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel})">
            <summary>
            Delete a new Sales Order
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.salesOrder">
            <summary>
            Represents a SalesOrder page entity to be deleted.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.SalesOrder">
            <summary>
            Represents a SalesOrder entity to be deleted.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.SalesOrders">
            <summary>
            Gets or sets the collection of sales orders associated with the application.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.SiteCredential">
            <summary>
            Gets or sets the credentials used to authenticate with the site.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.credential">
            <summary>
            Gets or sets the credential information used for authentication.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.OnGetAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the GET request to retrieve a SalesOrder by its ID for deletion.
            </summary>
            <param name="id">The ID of the SalesOrder to retrieve.</param>
            <returns>An IActionResult that renders the page if successful, or NotFound if the ID is invalid.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DeleteModel.OnPostAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the POST request to delete a SalesOrder by its ID.
            </summary>
            <param name="id">The ID of the SalesOrder to delete.</param>
            <returns>An IActionResult that redirects to the Details page if successful, or NotFound if the ID is invalid.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel">
            <summary>
            Represents the page model for managing and displaying sales order details.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel"/> class is responsible for handling the retrieval, synchronization, and
            display of sales order data from both a local database and an external Acumatica ERP system. It provides properties
            for managing sales orders, shipments, credentials, and filtering parameters, as well as methods for handling GET and
            POST requests to interact with the data. <para> This class is designed to work within the ASP.NET Core Razor Pages
            framework and relies on dependency injection for database and logging services. </para></remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel})">
            <summary>
            Represents the page model for managing and displaying sales order details.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel"/> class is responsible for handling the retrieval, synchronization, and
            display of sales order data from both a local database and an external Acumatica ERP system. It provides properties
            for managing sales orders, shipments, credentials, and filtering parameters, as well as methods for handling GET and
            POST requests to interact with the data. <para> This class is designed to work within the ASP.NET Core Razor Pages
            framework and relies on dependency injection for database and logging services. </para></remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel._logger">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel"/> class.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.salesOrders">
            <summary>
            Credentials list of creds in db
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.SalesOrders">
            <summary>
            Gets or sets the list of sales orders retrieved from the database or API.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.SalesOrderShipments">
            <summary>
            Gets or sets the collection of sales order shipments associated with the current sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.SiteCredential">
            <summary>
            Gets or sets the site credentials object used to hold credentials for Acumatica ERP connection.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.credential">
            <summary>
            Gets or sets the credentials used for authentication.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.RefreshFlag">
            <summary>
            Gets or sets a value indicating whether the data from local store should be refreshed.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.OnGetAsync">
            <summary>
            Handles the GET request for the page, managing the retrieval and synchronization of sales order data.
            </summary>
            <remarks>This method performs several operations based on the state of the application: <list
            type="bullet"> <item> If the TempData flags <c>EditFlag</c> or <c>DeleteFlag</c> are set to <see
            langword="true"/>, it refreshes the local cache of sales orders. </item> <item> If the local store requires
            refreshing, indicated by the <c>RefreshFlag</c>, it retrieves sales order data from an external Acumatica ERP
            system and updates the local database. </item> <item> If no refresh is required, it clears the local store and
            prepares it for future updates. </item> </list> The method ensures that the local store is synchronized with the
            external system when necessary and handles exceptions related to data retrieval or connectivity
            issues.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Typically, this is the current page,
            but it may redirect to another page if certain conditions are met.</returns>
            <exception cref="T:System.NullReferenceException">Thrown if critical objects such as <c>SalesOrders</c> or the API client cannot be initialized.</exception>
            <exception cref="T:System.Exception">Thrown if an error occurs during the interaction with the external Acumatica ERP system.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.DetailsModel.OnPostAsync">
            <summary>
            Handles the POST request for the Details page.
            Retrieves sales orders filtered by the specified date range and updates the model.
            </summary>
            <returns>An IActionResult representing the result of the POST operation.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel">
            <summary>
            Represents the model for editing sales orders in the application.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel"/> class provides properties and methods for handling sales order data,
            including retrieving, updating, and validating sales orders. It is designed to work with ASP.NET Core Razor Pages
            and integrates with the application's database context and logging system.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel})">
            <summary>
            Represents the model for editing sales orders in the application.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel"/> class provides properties and methods for handling sales order data,
            including retrieving, updating, and validating sales orders. It is designed to work with ASP.NET Core Razor Pages
            and integrates with the application's database context and logging system.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel._logger">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel"/> class.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.SalesOrder">
            <summary>
            Gets or sets the sales order application model used for binding and processing sales order data.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.SiteCredential">
            <summary>
            Gets or sets the Credentials used to authenticate with the site.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.Credential">
            <summary>
            Gets or sets the Credential used for authentication or authorization.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.FromDate">
            <summary>
            Gets or sets the starting date for the specified time range.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.ToDate">
            <summary>
            Gets or sets the date and time value representing the target date.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.NumRecords">
            <summary>
            Gets or sets the number of records currently stored or processed.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.Selected_SalesOrder_Type">
            <summary>
            Gets or sets the type of the selected sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.Selected_SalesOrder_Types">
            <summary>
            Gets the list of selectable sales order types.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.Selected_SalesOrder_Statuses">
            <summary>
            Gets the list of selectable sales order statuses.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.OnGetAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the GET request for editing a sales order.
            </summary>
            <param name="id">The ID of the sales order to edit.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.EditModel.OnPostAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the HTTP POST request to update a sales order.
            </summary>
            <remarks>This method validates the model state, updates the sales order's status, and saves the changes to the
            database. If a concurrency conflict occurs during the update, the method checks whether the sales order still exists
            and throws an exception if the conflict cannot be resolved.</remarks>
            <param name="id">The identifier of the sales order to update. Must be a valid sales order ID.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation.  Returns the current page if the model state
            is invalid, a "Not Found" result if the sales order does not exist,  or redirects to the details page upon
            successful update.</returns>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.IndexModel._logger">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.IndexModel"/> class.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.IndexModel.Selected_SalesOrder_Types">
            <summary>
            Gets or sets the list of selectable sales order types.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.IndexModel.OnGet">
            <summary>
            Handles GET requests for the Index page.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Client.SalesOrder.IndexModel.OnPost">
            <summary>
            Handles POST requests for the Index page.
            </summary>
            <returns>A redirection to the Details page.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.CreateModel">
            <summary>
            Represents the page model for creating a new credential.
            </summary>
            <remarks>This class provides functionality for handling HTTP GET and POST requests related to the creation of
            credentials. It uses an <see cref="T:RevisionTwoApp.RestApi.Data.AppDbContext"/> for database operations and an <see
            cref="T:Microsoft.Extensions.Logging.ILogger`1"/> for logging.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.CreateModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.CreateModel})">
            <summary>
            Represents the page model for creating a new credential.
            </summary>
            <remarks>This class provides functionality for handling HTTP GET and POST requests related to the creation of
            credentials. It uses an <see cref="T:RevisionTwoApp.RestApi.Data.AppDbContext"/> for database operations and an <see
            cref="T:Microsoft.Extensions.Logging.ILogger`1"/> for logging.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.CreateModel._context">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.CreateModel.credential">
            <summary>
            Gets or sets the credential being created.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.CreateModel.OnGet">
            <summary>
            Handles GET requests for the page.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that renders the current page.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.CreateModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request for the page.
            </summary>
            <remarks>This method processes form submissions and performs validation on the model state. If the
            model state is invalid, the method returns the current page to allow the user to correct errors. If the model
            state is valid, the method saves the submitted data to the database and redirects to the index page.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Returns the current page if the model
            state is invalid. Redirects to the index page upon successful processing.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DeleteModel">
            <summary>
            Represents a Razor Page model for handling the deletion of credentials.
            </summary>
            <remarks>This class provides methods to handle GET and POST requests for deleting credentials. It interacts
            with the database context to retrieve and delete credentials and logs relevant information during the process. The
            class requires a valid <see cref="T:RevisionTwoApp.RestApi.Data.AppDbContext"/> and <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/>  to function
            correctly.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DeleteModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DeleteModel})">
            <summary>
            Represents a Razor Page model for handling the deletion of credentials.
            </summary>
            <remarks>This class provides methods to handle GET and POST requests for deleting credentials. It interacts
            with the database context to retrieve and delete credentials and logs relevant information during the process. The
            class requires a valid <see cref="T:RevisionTwoApp.RestApi.Data.AppDbContext"/> and <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/>  to function
            correctly.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DeleteModel._context">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DeleteModel.credential">
            <summary>
            Gets or sets the credential to be deleted.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DeleteModel.OnGetAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the GET request to retrieve the credential for deletion.
            </summary>
            <param name="id">The ID of the credential to retrieve.</param>
            <returns>The page result or a not found result.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DeleteModel.OnPostAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the POST request to delete the credential.
            </summary>
            <param name="id">The ID of the credential to delete.</param>
            <returns>A redirect to the index page or a not found result.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel">
            <summary>
            Represents the model for handling credential details in a Razor Page.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel"/> class is used to manage the retrieval and display of credential
            details. It provides functionality to handle GET requests for fetching credential information by ID.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel})">
            <summary>
            Represents the model for handling credential details in a Razor Page.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel"/> class is used to manage the retrieval and display of credential
            details. It provides functionality to handle GET requests for fetching credential information by ID.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel._context">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel.credential">
            <summary>
            Gets or sets the credential details.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.DetailsModel.OnGetAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the GET request to retrieve credential details by ID.
            </summary>
            <param name="id">The ID of the credential.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.EditModel">
            <summary>
            Represents the page model for editing credentials.
            </summary>
            <remarks>This class provides functionality to handle GET and POST requests for editing credentials. It
            interacts with the database context to retrieve and update credential data.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.EditModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.EditModel})">
            <summary>
            Represents the page model for editing credentials.
            </summary>
            <remarks>This class provides functionality to handle GET and POST requests for editing credentials. It
            interacts with the database context to retrieve and update credential data.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.EditModel._context">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.EditModel.credential">
            <summary>
            Gets or sets the credential being edited.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.EditModel.OnGetAsync(System.Nullable{System.Int32})">
            <summary>
            Handles the GET request to retrieve the credential for editing.
            </summary>
            <param name="id">The ID of the credential to edit.</param>
            <returns>The page result or a not found result.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.EditModel.OnPostAsync">
            <summary>
            Handles the POST request to update the credential.
            </summary>
            <returns>A redirect to the index page or the current page if validation fails.</returns>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.IndexModel._context">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.IndexModel.credentials">
            <summary>
            Gets or sets the list of credentials.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Credentials.IndexModel.OnGetAsync">
            <summary>
            Handles the GET request for the Credentials Index page.
            </summary>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel">
            <summary>
            Represents the model for the About page.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.#ctor(Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel})">
            <summary>
            Represents the model for the About page.
            </summary>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel._logger">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.DisplayNumOfEmployees">
            <summary>
            Gets or sets the number of employees to display.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.DisplayTotalRevenue">
            <summary>
            Gets or sets the total revenue to display.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.DisplayStartYear">
            <summary>
            Gets or sets the start year to display.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.OnGet">
            <summary>
            Handles GET requests for the About page.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.YearValue">
            <summary>
            Generates a random start year.
            </summary>
            <returns>The generated start year as a string.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.EmpValue">
            <summary>
            Generates a random number of employees.
            </summary>
            <returns>The generated number of employees.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.AboutModel.RevValue">
            <summary>
            Generates a random total revenue.
            </summary>
            <returns>The generated total revenue.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.BackgroundModel">
            <summary>
            Represents the model for the Background page, providing functionality to handle HTTP GET requests.
            </summary>
            <remarks>This class is used in ASP.NET Core Razor Pages to manage the Background page. It logs information
            about page access using the provided <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance.</remarks>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.BackgroundModel.#ctor(Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.BackgroundModel})">
            <summary>
            Represents the model for the Background page, providing functionality to handle HTTP GET requests.
            </summary>
            <remarks>This class is used in ASP.NET Core Razor Pages to manage the Background page. It logs information
            about page access using the provided <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance.</remarks>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.BackgroundModel._logger">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.BackgroundModel.OnGet">
            <summary>
            Handles GET requests to the Background page.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.GettingStartedModel">
            <summary>
            Represents the model for the "Getting Started" page, providing functionality to handle GET requests.
            </summary>
            <remarks>This class is used in Razor Pages to manage the "Getting Started" page. It logs information about
            page access and can be extended to include additional functionality for the page.</remarks>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.GettingStartedModel.#ctor(Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.GettingStartedModel})">
            <summary>
            Represents the model for the "Getting Started" page, providing functionality to handle GET requests.
            </summary>
            <remarks>This class is used in Razor Pages to manage the "Getting Started" page. It logs information about
            page access and can be extended to include additional functionality for the page.</remarks>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.GettingStartedModel._logger">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.GettingStartedModel.OnGet">
            <summary>
            Handles GET requests for the "Getting Started" page.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel">
            <summary>
            Represents the model for the Index page, providing functionality to handle GET requests and manage credentials for
            connecting to Acumatica ERP.
            </summary>
            <remarks>This class is responsible for retrieving credentials, establishing a connection to Acumatica ERP, and
            performing operations such as fetching customer data and storing it locally. It also handles logging for various
            operations and ensures proper cleanup, such as logging out from the client.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel})">
            <summary>
            Represents the model for the Index page, providing functionality to handle GET requests and manage credentials for
            connecting to Acumatica ERP.
            </summary>
            <remarks>This class is responsible for retrieving credentials, establishing a connection to Acumatica ERP, and
            performing operations such as fetching customer data and storing it locally. It also handles logging for various
            operations and ensures proper cleanup, such as logging out from the client.</remarks>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel._context">
            <summary>
            Initializes a new instance of the class with the specified database context.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel.SiteUrl">
            <summary>
            The URL of the site.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel.SiteCredential">
            <summary>
            Object to hold credentials for Acumatica ERP connection.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel.credential">
            <summary>
            Gets or sets the credential used for authentication or authorization.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Demo.Pages.Home.IndexModel.OnGet">
            <summary>
            Handles GET requests to the Index page.
            </summary>
            <returns>An IActionResult representing the result of the operation.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.AccessDeniedModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.AccessDeniedModel.OnGet">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailModel">
            <summary>
            Represents the model for the email confirmation page in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for handling email confirmation requests, including
            validating user identity and confirmation codes.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts and perform operations such as email
            confirmation.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailModel.OnGetAsync(System.String,System.String)">
            <summary>
            Handles the GET request for email confirmation.
            </summary>
            <remarks>This method decodes the provided confirmation code and attempts to confirm the user's email
            address. If the confirmation succeeds, a success message is displayed; otherwise, an error message is
            shown.</remarks>
            <param name="userId">The unique identifier of the user whose email is being confirmed. Cannot be <see langword="null"/>.</param>
            <param name="code">The email confirmation code, encoded in Base64 URL format. Cannot be <see langword="null"/>.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation.  Redirects to the Index page if <paramref
            name="userId"/> or <paramref name="code"/> is <see langword="null"/>. Returns a NotFound result if the user
            cannot be loaded. Returns the current page with a status message indicating success or failure of the email
            confirmation.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailChangeModel">
            <summary>
            Represents the page model for confirming an email change in the ASP.NET Core Identity system.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly  from your code. It provides functionality for handling email change confirmation, including updating
            the user's  email and username, and refreshing the sign-in session.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailChangeModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailChangeModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> instance used to handle user sign-in operations.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailChangeModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ConfirmEmailChangeModel.OnGetAsync(System.String,System.String,System.String)">
            <summary>
            Handles the GET request to confirm and update a user's email address.
            </summary>
            <remarks>This method verifies the provided confirmation code, updates the user's email and username,
            and refreshes the user's sign-in session. If the operation fails, an error message is displayed on the page. In
            this application, the email and username are treated as identical, so both are updated simultaneously.</remarks>
            <param name="userId">The unique identifier of the user whose email is being updated. Cannot be <see langword="null"/>.</param>
            <param name="email">The new email address to associate with the user. Cannot be <see langword="null"/>.</param>
            <param name="code">The confirmation code used to verify the email change. Cannot be <see langword="null"/>.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects to the index page if any parameter is <see langword="null"/>,
            returns a "Not Found" result if the user cannot be loaded, or displays the appropriate page based on the success
            or failure of the email update operation.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel">
            <summary>
            Represents the page model for handling external login functionality in ASP.NET Core Identity.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and provides methods and
            properties for managing external login workflows, such as redirecting to external providers, handling callbacks, and
            confirming user accounts. It is not intended to be used directly from your code and may change or be removed in
            future releases.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.#ctor(Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel},Microsoft.AspNetCore.Identity.UI.Services.IEmailSender)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel"/> class, providing the necessary services for
            handling external login functionality.
            </summary>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> used to manage user sign-in operations.</param>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> used to manage user-related operations such as creation, deletion, and
            retrieval.</param>
            <param name="userStore">The <see cref="T:Microsoft.AspNetCore.Identity.IUserStore`1"/> used to persist user data.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> used for logging operations and diagnostics.</param>
            <param name="emailSender">The <see cref="T:Microsoft.AspNetCore.Identity.UI.Services.IEmailSender"/> used to send email notifications.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.ProviderDisplayName">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.ReturnUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.ErrorMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.OnGet">
            <summary>
            Handles GET requests and redirects the user to the login page.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects the user to the "./Login" page.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.OnPost(System.String,System.String)">
            <summary>
            Initiates an external login process with the specified authentication provider.
            </summary>
            <remarks>This method configures the external authentication properties and redirects the user to the 
            external login provider's authentication page. The <paramref name="returnUrl"/> parameter  allows specifying a
            custom URL to return to after the authentication process.</remarks>
            <param name="provider">The name of the external authentication provider to use for login.</param>
            <param name="returnUrl">The URL to redirect to after the external login process is completed.  If <see langword="null"/>, the default
            redirect URL will be used.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that challenges the specified external authentication provider.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.OnGetCallbackAsync(System.String,System.String)">
            <summary>
            Handles the callback from an external login provider and processes the user's authentication result.
            </summary>
            <remarks>This method processes the external login callback by verifying the login information, signing
            in the user if they already have an account, or prompting them to create an account if they do not. It also
            handles errors from the external provider and redirects appropriately.</remarks>
            <param name="returnUrl">The URL to redirect to after successful authentication. Defaults to the application's root if not specified.</param>
            <param name="remoteError">An error message from the external login provider, if any. If provided, the user is redirected to the login page
            with the error message.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the outcome of the authentication process. Redirects to the specified
            <paramref name="returnUrl"/> on success, the login page on error, the lockout page if the user is locked out, or
            a page prompting the user to create an account if no account exists.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.OnPostConfirmationAsync(System.String)">
            <summary>
            Handles the confirmation process for external login registration.
            </summary>
            <remarks>This method is invoked after a user registers using an external login provider. It creates a
            new user account, associates the external login information with the account, and sends an email confirmation
            link if required. If the external login information cannot be retrieved or the registration fails, the user is
            redirected to the login page.</remarks>
            <param name="returnUrl">The URL to redirect to after the operation completes. Defaults to the application's root if not specified.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. This may include a redirect to the
            specified <paramref name="returnUrl"/>, the login page, or a registration confirmation page.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ExternalLoginModel.CreateUser">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/> class.
            </summary>
            <remarks>This method attempts to create an instance of <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/> using a
            parameterless constructor. If <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/> is abstract or does not have a parameterless
            constructor, an  <see cref="T:System.InvalidOperationException"/> is thrown.</remarks>
            <returns>A new instance of <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/>.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/> is abstract or does not have a parameterless constructor. Ensure that <see
            cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/> meets these requirements, or override the external login page  located at
            <c>/Areas/Identity/Pages/Account/ExternalLogin.cshtml</c>.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordModel">
            <summary>
            Represents the model for the "Forgot Password" page in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for handling password reset requests, including validating
            user input, generating a password reset token, and sending a password reset email.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.UI.Services.IEmailSender)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="emailSender">The <see cref="T:Microsoft.AspNetCore.Identity.UI.Services.IEmailSender"/> instance used to send email notifications.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request for initiating a password reset process.
            </summary>
            <remarks>This method validates the model state and, if valid, attempts to find the user by their email
            address. If the user exists and their email is confirmed, a password reset token is generated and sent to the
            user via email. If the user does not exist or their email is not confirmed, the method redirects to the password
            reset confirmation page without revealing the user's existence or email confirmation status.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation.  Returns a redirect to the password reset
            confirmation page if the operation succeeds, or the current page if the model state is invalid.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordConfirmation">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ForgotPasswordConfirmation.OnGet">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LockoutModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LockoutModel.OnGet">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.ExternalLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.ReturnUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.ErrorMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.InputModel.Password">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginModel.InputModel.RememberMe">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel">
            <summary>
            Represents the page model for handling two-factor authentication during login in the ASP.NET Core Identity default
            UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for managing two-factor authentication, including retrieving
            the authenticated user, validating the  authenticator code, and handling login state.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.#ctor(Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel"/> class.
            </summary>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> used to manage user sign-in operations.</param>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> used to manage user-related operations such as retrieving user information.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> used to log diagnostic and operational information.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.RememberMe">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.ReturnUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.InputModel.TwoFactorCode">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.InputModel.RememberMachine">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.OnGetAsync(System.Boolean,System.String)">
            <summary>
            Handles the GET request for the two-factor authentication page.
            </summary>
            <param name="rememberMe">A value indicating whether the user should be remembered on the current device after authentication.</param>
            <param name="returnUrl">The URL to redirect to after successful authentication. If <see langword="null"/>, the default page is used.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the rendered two-factor authentication page.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the two-factor authentication user cannot be loaded.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWith2faModel.OnPostAsync(System.Boolean,System.String)">
            <summary>
            Handles the POST request for two-factor authentication sign-in.
            </summary>
            <remarks>This method validates the two-factor authentication code provided by the user and attempts to
            sign them in. If the authentication succeeds, the user is redirected to the specified <paramref
            name="returnUrl"/>. If the account is locked out, the user is redirected to the lockout page. If the
            authentication fails, an error message is added to the model state, and the current page is returned.</remarks>
            <param name="rememberMe">A value indicating whether the authentication session should persist across browser restarts. If <see
            langword="true"/>, the session will be remembered; otherwise, it will not.</param>
            <param name="returnUrl">The URL to redirect to after successful authentication. If <see langword="null"/>, the user will be redirected
            to the application's root URL.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. This can be a redirect to the specified
            <paramref name="returnUrl"/>, a page indicating a locked-out account, or the current page with an error message
            if authentication fails.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the two-factor authentication user cannot be loaded.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel">
            <summary>
            Represents the page model for logging in using a recovery code as part of two-factor authentication.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for handling two-factor authentication using recovery codes,
            including validating the recovery code and managing the user's authentication state.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.#ctor(Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel"/> class.
            </summary>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> used to manage user sign-in operations.</param>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> used to manage user-related operations such as account recovery.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> used to log diagnostic and operational information.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.ReturnUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.InputModel.RecoveryCode">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.OnGetAsync(System.String)">
            <summary>
            Handles the GET request for the two-factor authentication page.
            </summary>
            <remarks>This method ensures that the user has completed the username and password authentication step
            before accessing the two-factor authentication page. If the user is not authenticated, an  exception is thrown.
            The method sets the return URL for redirection after successful authentication.</remarks>
            <param name="returnUrl">The URL to redirect to after successful authentication. Defaults to <see langword="null"/>.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the page rendering.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the two-factor authentication user cannot be loaded.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LoginWithRecoveryCodeModel.OnPostAsync(System.String)">
            <summary>
            Handles the POST request for two-factor authentication using a recovery code.
            </summary>
            <remarks>This method validates the recovery code provided by the user and attempts to sign them in
            using the recovery code. If the recovery code is invalid, the method adds a model error and returns the current
            page. If the user account is locked, the method redirects to the lockout page.</remarks>
            <param name="returnUrl">The URL to redirect to after successful authentication. If <see langword="null"/>, the user is redirected to the
            application's root.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. Returns a page if the model state is
            invalid or the recovery code is incorrect. Redirects to the specified <paramref name="returnUrl"/> or the
            application's root upon successful authentication. Redirects to the lockout page if the user account is locked.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the two-factor authentication user cannot be loaded.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LogoutModel">
            <summary>
            Represents the model for handling user logout functionality in a Razor Page.
            </summary>
            <remarks>This class provides the logic for signing out the currently authenticated user and optionally 
            redirecting them to a specified URL or the default page. It is designed to be used in Razor Pages  that require
            logout functionality.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LogoutModel.#ctor(Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LogoutModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LogoutModel"/> class.
            </summary>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> used to manage user sign-in and sign-out operations.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> used to log information related to logout operations.</param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.LogoutModel.OnPost(System.String)">
            <summary>
            Handles the HTTP POST request to log out the current user and redirect to the specified URL or the default page.
            </summary>
            <remarks>This method signs out the current user and ensures that the browser performs a new request to
            update the user's identity.</remarks>
            <param name="returnUrl">The URL to redirect to after logging out. If null, the user is redirected to the default page.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the redirection to the specified URL or the default page.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel">
            <summary>
            Represents the page model for changing a user's password in the ASP.NET Core Identity system.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for handling password change operations, including
            validation and updating the user's password.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> instance used to manage user sign-in operations.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used for logging operations.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.InputModel.OldPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.InputModel.NewPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.InputModel.ConfirmPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.OnGetAsync">
            <summary>
            Handles GET requests for the page and determines the appropriate response based on the user's password status.
            </summary>
            <remarks>This method retrieves the currently authenticated user and checks whether they have a
            password set. If the user does not exist, a "Not Found" result is returned. If the user does not have a
            password, they are redirected to the page for setting a password. Otherwise, the method renders the current
            page.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Returns <see langword="null"/> if the
            user is not found, a redirect to the password setup page if the user does not have a password, or the current
            page if the user has a password.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ChangePasswordModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to change the user's password.
            </summary>
            <remarks>This method validates the model state, retrieves the current user, and attempts to change
            their password. If the password change is successful, the user is re-signed in and redirected to the appropriate
            page. If the operation fails, validation errors are added to the model state and the current page is
            re-displayed.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. Returns the current page if the model
            state is invalid or the password change fails. Returns a redirect to another page if the password change
            succeeds.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel">
            <summary>
            Represents the page model for deleting personal data in the ASP.NET Core Identity default UI. This API supports the
            ASP.NET Core Identity infrastructure and is not intended to be used directly from your code. This API may change or
            be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> instance used to manage user sign-in operations.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used to log operations and events related to personal data
            deletion.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.InputModel.Password">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.RequirePassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.OnGet">
            <summary>
            Handles GET requests for the page and initializes the required data.
            </summary>
            <remarks>This method retrieves the current user and determines whether a password is required for the
            user.  If the user cannot be found, a "Not Found" result is returned.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation.  Returns <see langword="NotFound"/> if
            the user cannot be loaded; otherwise, returns the page.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DeletePersonalDataModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to delete the currently authenticated user.
            </summary>
            <remarks>This method deletes the user associated with the current authentication context. If the user
            has a password, the password must be provided for verification. Upon successful deletion, the user is signed out
            and redirected to the application's root page.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. Returns a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if
            the user cannot be loaded, a <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageResult"/> if the password verification fails, or a <see
            cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> to the application's root page upon successful deletion.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if an unexpected error occurs during the user deletion process.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.Disable2faModel">
            <summary>
            Represents the page model for disabling two-factor authentication (2FA) in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly  from your code. It provides functionality for disabling 2FA for the currently authenticated
            user.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.Disable2faModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.Disable2faModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.Disable2faModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used for logging operations.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.Disable2faModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.Disable2faModel.OnGet">
            <summary>
            Handles GET requests to retrieve the current user's information and verify their two-factor authentication (2FA)
            status.
            </summary>
            <remarks>This method checks if the current user exists and whether two-factor authentication (2FA) is
            enabled for the user. If the user does not exist, a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> is returned. If 2FA is not
            enabled for the user, an <see cref="T:System.InvalidOperationException"/> is thrown.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation.  Returns <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageResult"/> if
            the user exists and 2FA is enabled.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if two-factor authentication is not enabled for the current user.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.Disable2faModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to disable two-factor authentication (2FA) for the current user.
            </summary>
            <remarks>This method retrieves the currently authenticated user and disables their two-factor
            authentication. If the user cannot be found, a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> is returned. If an error occurs
            while disabling 2FA, an <see cref="T:System.InvalidOperationException"/> is thrown. Upon successful completion, the user
            is redirected to the Two-Factor Authentication page.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. Returns a redirect to the  Two-Factor
            Authentication page upon success, or a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the user cannot be found.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if an unexpected error occurs while disabling two-factor authentication.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel">
            <summary>
            Represents the page model for downloading personal data associated with the current user.
            </summary>
            <remarks>This page model provides functionality for users to download their personal data in JSON format. The
            personal data includes properties marked with the <see cref="T:Microsoft.AspNetCore.Identity.PersonalDataAttribute"/> in the  <see
            cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/> class, external login provider keys, and the authenticator key.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user-related operations.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used to log messages related to personal data downloads.</param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel.OnGet">
            <summary>
            Handles GET requests for the current page.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation.  Returns <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if
            the requested resource is not found.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.DownloadPersonalDataModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to generate and download the user's personal data as a JSON file.
            </summary>
            <remarks>This method retrieves the personal data associated with the currently authenticated user,
            including properties marked with the <see cref="T:Microsoft.AspNetCore.Identity.PersonalDataAttribute"/> in the <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser"/>
            class, external login provider keys, and the authenticator key. The data is returned as a downloadable JSON
            file.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that represents the downloadable JSON file containing the user's personal data.
            Returns <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the user cannot be loaded.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EmailModel">
            <summary>
            Represents the page model for managing email-related functionality in the ASP.NET Core Identity UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and provides
            functionality  for changing and verifying user email addresses. It is not intended to be used directly from your
            code  and may change or be removed in future releases.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EmailModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EmailModel.IsEmailConfirmed">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EmailModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EmailModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EmailModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EmailModel.InputModel.NewEmail">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.SharedKey">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.AuthenticatorUri">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.RecoveryCodes">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.EnableAuthenticatorModel.InputModel.Code">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel">
            <summary>
            Represents the model for managing external logins in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for viewing, adding, and removing external logins associated
            with the current user.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.IdentityUser})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> instance used to handle user sign-in operations.</param>
            <param name="userStore">The <see cref="T:Microsoft.AspNetCore.Identity.IUserStore`1"/> instance used to interact with the underlying user data store.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.CurrentLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.OtherLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.ShowRemoveButton">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.OnGetAsync">
            <summary>
            Handles GET requests to retrieve and display the user's login information.
            </summary>
            <remarks>This method retrieves the current user's login information, including external logins and
            authentication schemes. It also determines whether the "Remove" button should be displayed based on the user's
            password hash and the number of logins.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Returns the page if the user is found,
            or a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the user cannot be loaded.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.OnPostRemoveLoginAsync(System.String,System.String)">
            <summary>
            Removes an external login associated with the current user.
            </summary>
            <remarks>This method removes the specified external login from the current user's account. If the
            operation succeeds, the user's sign-in session is refreshed to reflect the change. If the operation fails, a
            status message is set indicating the failure.</remarks>
            <param name="loginProvider">The name of the external login provider (e.g., "Google", "Facebook").</param>
            <param name="providerKey">The unique key identifying the external login for the specified provider.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects to the current page after the operation completes. If the user is
            not found, returns a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/>.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.OnPostLinkLoginAsync(System.String)">
            <summary>
            Initiates the process of linking an external login provider to the current user's account.
            </summary>
            <remarks>This method clears any existing external cookies to ensure a clean login process before
            redirecting the user. The external login provider specified by <paramref name="provider"/> must be properly
            configured in the application. After successful authentication, the external login will be linked to the current
            user's account.</remarks>
            <param name="provider">The name of the external login provider to link. This value must correspond to a configured authentication
            provider.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects the user to the external login provider's authentication page.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ExternalLoginsModel.OnGetLinkLoginCallbackAsync">
            <summary>
            Handles the callback for linking an external login to the current user account.
            </summary>
            <remarks>This method processes the external login information provided by the authentication
            middleware and attempts to associate it with the currently signed-in user. If the external login is successfully
            linked, the user is redirected to the current page with a success message. If the operation fails, an
            appropriate error message is displayed, and the user remains on the current page.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. Returns a redirect to the current page if
            the external login is successfully added or if an error occurs. Returns <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the
            current user cannot be loaded.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if external login information cannot be loaded.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel">
            <summary>
            Represents the page model for generating new two-factor authentication (2FA) recovery codes.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for generating new recovery codes for users who have 2FA
            enabled.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts and generate recovery codes.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used to log operations and events related to recovery code
            generation.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel.RecoveryCodes">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel.OnGetAsync">
            <summary>
            Handles GET requests to prepare the page for generating recovery codes for a user with two-factor authentication
            enabled.
            </summary>
            <remarks>This method retrieves the currently authenticated user and verifies that two-factor
            authentication is enabled for the user. If the user is not found, a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> is returned. If
            two-factor authentication is not enabled, an  <see cref="T:System.InvalidOperationException"/> is thrown.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Returns the page if the user is valid
            and has two-factor authentication enabled; otherwise, returns a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> or throws an
            exception.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the user does not have two-factor authentication enabled.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.GenerateRecoveryCodesModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to generate new two-factor authentication (2FA) recovery codes for the current
            user.
            </summary>
            <remarks>This method retrieves the currently authenticated user and generates a new set of recovery
            codes for two-factor authentication. Recovery codes are used as a backup mechanism when the user cannot access
            their primary 2FA method. The user must have 2FA enabled for recovery codes to be generated.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.  The result is an <see
            cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects to the page displaying the newly generated recovery codes.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the user does not have two-factor authentication enabled.</exception>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.IndexModel.Username">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.IndexModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.IndexModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel.PhoneNumber">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.Index">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.ChangePassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.DownloadPersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.DeletePersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.ExternalLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.PersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.TwoFactorAuthentication">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.IndexNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.EmailNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.ChangePasswordNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.DownloadPersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.DeletePersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.ExternalLoginsNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.PersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.TwoFactorAuthenticationNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ManageNavPages.PageNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.PersonalDataModel">
            <summary>
            Represents the model for managing personal data in a Razor Page application.
            </summary>
            <remarks>This class is used to handle requests related to personal data for the currently authenticated user.
            It provides functionality to retrieve the user's information and display the corresponding page.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.PersonalDataModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.PersonalDataModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.PersonalDataModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user identities.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used for logging operations.</param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.PersonalDataModel.OnGet">
            <summary>
            Handles GET requests for the page and retrieves the current user.
            </summary>
            <remarks>If the user cannot be found, the method returns a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> with an error
            message. Otherwise, it prepares the page for rendering.</remarks>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageResult"/> if the user is successfully retrieved; otherwise, a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/>.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel">
            <summary>
            Represents the page model for resetting the authenticator key in an ASP.NET Core Identity application.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for resetting the authenticator app key associated with a
            user account.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> instance used to handle user sign-in operations.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used to log diagnostic and operational information.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel.OnGet">
            <summary>
            Handles GET requests for the page and retrieves the current user.
            </summary>
            <remarks>If the user cannot be found, the method returns a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/>  with an
            appropriate error message. Otherwise, it returns the page.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.  Returns a <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageResult"/>
            if the user is successfully retrieved, or  a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the user cannot be found.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ResetAuthenticatorModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to reset the user's authenticator app key and disable two-factor authentication.
            </summary>
            <remarks>This method performs the following actions: <list type="bullet"> <item><description>Retrieves
            the currently signed-in user.</description></item> <item><description>Disables two-factor authentication for the
            user.</description></item> <item><description>Resets the user's authenticator app key.</description></item>
            <item><description>Logs the operation for auditing purposes.</description></item> <item><description>Refreshes
            the user's sign-in session.</description></item> <item><description>Sets a status message indicating that the
            authenticator app key has been reset.</description></item> </list> After completing these actions, the method
            redirects the user to the page for configuring a new authenticator app key.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects the user to the page for enabling the authenticator.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel">
            <summary>
            Represents the page model for setting a password in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly  from your code. It provides functionality for users to set a password if they do not already have
            one.  This API may change or be removed in future releases.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> instance used to handle user sign-in operations.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.InputModel.NewPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.InputModel.ConfirmPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.OnGetAsync">
            <summary>
            Handles GET requests for the page and determines the appropriate response based on the user's password status.
            </summary>
            <remarks>If the user does not exist, a "Not Found" result is returned. If the user has a password, the
            method redirects to the "Change Password" page. Otherwise, the current page is displayed.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Returns <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if
            the user cannot be loaded, <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> if the user has a password, or the current page if
            the user does not have a password.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.SetPasswordModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to set a new password for the current user.
            </summary>
            <remarks>This method validates the model state and attempts to set a new password for the currently
            authenticated user. If the operation succeeds, the user's sign-in session is refreshed, and the user is
            redirected to the current page. If the operation fails, validation errors are added to the model state, and the
            page is re-rendered.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. Returns the current page if the model
            state is invalid or if the password update fails. Redirects to the current page upon successful password update.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ShowRecoveryCodesModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ShowRecoveryCodesModel.RecoveryCodes">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ShowRecoveryCodesModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.ShowRecoveryCodesModel.OnGet">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel">
            <summary>
            Represents the model for managing two-factor authentication settings in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for enabling, disabling, and managing two-factor
            authentication settings, including recovery codes and remembered devices.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.SignInManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="signInManager">The <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1"/> instance used to handle user sign-in operations.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> instance used for logging operations related to two-factor
            authentication.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.HasAuthenticator">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.RecoveryCodesLeft">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.Is2faEnabled">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.IsMachineRemembered">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.OnGetAsync">
            <summary>
            Handles GET requests for the page and initializes user-specific two-factor authentication data.
            </summary>
            <remarks>This method retrieves the current user and populates properties related to two-factor
            authentication, including whether the user has an authenticator configured, whether two-factor authentication is
            enabled, whether the current machine is remembered for two-factor authentication, and the number of recovery
            codes remaining. If the user cannot be found, the method returns a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/>.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Returns <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageResult"/> if the
            user is found, or <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the user cannot be loaded.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.Manage.TwoFactorAuthenticationModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to forget the current browser for two-factor authentication.
            </summary>
            <remarks>This method retrieves the currently authenticated user and marks the browser as forgotten for
            two-factor authentication purposes. After this operation, the user will be prompted for their two-factor
            authentication code when logging in again from the same browser.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects to the current page after successfully forgetting the browser, or
            a <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the user cannot be loaded.</returns>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterModel.ReturnUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterModel.ExternalLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterModel.InputModel.Password">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterModel.InputModel.ConfirmPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterConfirmationModel">
            <summary>
            Represents the model for the registration confirmation page in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for confirming user registration via email and generating an
            email confirmation link. This API may change or be removed in future releases.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterConfirmationModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.UI.Services.IEmailSender)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterConfirmationModel"/> class.
            </summary>
            <param name="userManager">The user manager used to manage user accounts and authentication.</param>
            <param name="sender">The email sender used to send confirmation emails.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterConfirmationModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterConfirmationModel.DisplayConfirmAccountLink">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterConfirmationModel.EmailConfirmationUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.RegisterConfirmationModel.OnGetAsync(System.String,System.String)">
            <summary>
            Handles GET requests for the email confirmation page.   
            </summary>
            <remarks>This method generates an email confirmation link for the specified user and displays it on
            the page. The confirmation link is only displayed if <c>DisplayConfirmAccountLink</c> is set to <see
            langword="true"/>.</remarks>
            <param name="email">The email address of the user to confirm. Cannot be null.</param>
            <param name="returnUrl">The URL to redirect to after the operation completes. Defaults to the application's root URL if not provided.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation.  Returns a redirect to the home page if
            <paramref name="email"/> is null,  a "Not Found" result if the user cannot be located, or the confirmation page
            if successful.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel">
            <summary>
            Represents the page model for resending an email confirmation in the ASP.NET Core Identity default UI.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides functionality for handling email confirmation resends, including
            validating user input and sending confirmation emails. This API may change or be removed in future
            releases.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.UI.Services.IEmailSender)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel"/> class.
            </summary>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
            <param name="emailSender">The <see cref="T:Microsoft.AspNetCore.Identity.UI.Services.IEmailSender"/> instance used to send email confirmations.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.OnGet">
            <summary>
            Handles GET requests for the page.
            </summary>
            <remarks>This method is invoked automatically during the page's lifecycle to process GET requests.
            Override this method to implement custom logic for handling GET requests.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResendEmailConfirmationModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request to send a verification email for email confirmation.
            </summary>
            <remarks>This method validates the model state and attempts to find the user associated with the
            provided email address. If the user exists, it generates an email confirmation token, constructs a callback URL,
            and sends a verification email. If the user does not exist, a generic message is displayed indicating that a
            verification email has been sent.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation. Returns the current page if the model
            state is invalid or after sending the verification email.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel">
            <summary>
            Represents the model for handling password reset functionality in the ASP.NET Core Identity framework.
            </summary>
            <remarks>This class is part of the ASP.NET Core Identity default UI infrastructure and is not intended to be
            used directly from your code. It provides the necessary properties and methods to facilitate password reset
            operations, including validation and user interaction.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.#ctor(Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel"/> class.
            </summary>
            <remarks>The <paramref name="userManager"/> parameter is required to perform operations related to
            user account management, such as resetting passwords.</remarks>
            <param name="userManager">The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> instance used to manage user accounts.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.InputModel.Password">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.InputModel.ConfirmPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.InputModel.Code">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.OnGet(System.String)">
            <summary>
            Handles GET requests for the password reset page.
            </summary>
            <param name="code">The base64 URL-encoded password reset code. This parameter is optional but must be provided for the operation to
            succeed.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the result of the operation.  Returns <see langword="BadRequest"/>
            if <paramref name="code"/> is <see langword="null"/>.  Otherwise, returns the password reset page with the
            decoded reset code.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordModel.OnPostAsync">
            <summary>
            Handles the HTTP POST request for resetting a user's password.
            </summary>
            <remarks>This method validates the model state and attempts to reset the password for the user
            associated with the provided email address. If the operation succeeds, the user is redirected to the password
            reset confirmation page. If the operation fails, validation errors are added to the model state and the current
            page is re-rendered.</remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> indicating the result of the operation. Returns the current page if the model
            state is invalid or if the password reset operation fails. Redirects to the password reset confirmation page if
            the operation succeeds.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordConfirmationModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.Account.ResetPasswordConfirmationModel.OnGet">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Areas.Identity.Pages.ErrorModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.ErrorModel.RequestId">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Areas.Identity.Pages.ErrorModel.ShowRequestId">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Areas.Identity.Pages.ErrorModel.OnGet">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Auxiliary.AuthId">
            <summary>
            Provides methods to retrieve authentication-related information.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Auxiliary.AuthId.getAuthId(System.Collections.Generic.List{RevisionTwoApp.RestApi.Models.Credential})">
            <summary>
            Retrieves the ID of the first checked credential from the provided list.
            </summary>
            <param name="credentials">A list of credentials to search through.</param>
            <returns>The ID of the first checked credential, or 0 if none are checked.</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Auxiliary.RequestLogger">
            <summary>
            Provides methods to log HTTP requests and responses to a file.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Auxiliary.RequestLogger.LogResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            Logs the details of an HTTP response to the RequestsLog.txt file.
            </summary>
            <param name="responseMessage">The HTTP response message to log.</param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Auxiliary.RequestLogger.LogRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Logs the details of an HTTP request to the RequestsLog.txt file.
            </summary>
            <param name="request">The HTTP request message to log.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Auxiliary.Site_Credential">
            <summary>
            Returns the site credential to be used for the connection
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Auxiliary.Site_Credential.#ctor(RevisionTwoApp.RestApi.Data.AppDbContext,Microsoft.Extensions.Logging.ILogger{System.Object})">
            <summary>
            Returns the site credential to be used for the connection
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Auxiliary.Site_Credential.SiteCredentials">
            <summary>
            List of site credentials retrieved from the database.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Auxiliary.Site_Credential.GetSiteCredential">
            <summary>
            Find the selected site credential from the credentials dbset in the database
            </summary>
            <returns>Credential SiteCredential</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Auxiliary.Site_Credential.GetSiteId(System.Collections.Generic.List{RevisionTwoApp.RestApi.Models.Credential})">
            <summary>
            etermines the Id for the site credential checked in the credentials dbset in the database
            </summary>
            <param name="Credentials"></param>
            <returns>int Id</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Data.AppDbContext">
            <summary>
            Represents the application's database context, providing access to the database tables and entities.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Data.AppDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{RevisionTwoApp.RestApi.Data.AppDbContext})">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Data.AppDbContext"/> class with the specified options.
            </summary>
            <param name="options">The options to configure the database context.</param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Data.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Configures the model for the database context.
            </summary>
            <param name="modelBuilder">The model builder used to configure the database schema.</param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Credentials">
            <summary>
            Gets or sets the credentials table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Addresses">
            <summary>
            Gets or sets the addresses table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Bills">
            <summary>
            Gets or sets the bills table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.BillDetails">
            <summary>
            Gets or sets the bill details table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Customers">
            <summary>
            Gets or sets the collection of customers from Acumatica ERP into the local store.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Contacts">
            <summary>
            Gets or sets the contacts table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Cases">
            <summary>
            Gets or sets the cases table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Opportunities">
            <summary>
            Gets or sets the opportunities table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.SalesOrders">
            <summary>
            Gets or sets the sales orders table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.Shipments">
            <summary>
            Gets or sets the shipments table.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Data.AppDbContext.ShipmentDetails">
            <summary>
            Gets or sets the shipment details table.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Data.SeedData">
            <summary>
            Provides methods to seed initial data into the database.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Data.SeedData.Initialize(System.IServiceProvider)">
            <summary>
            Initializes the database with seed data.
            </summary>
            <param name="serviceProvider">The service provider to resolve dependencies.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the AppDbContext or its properties are null.</exception>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAddr">
            <summary>
            Converts an Address object to an Addr object.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAddr.#ctor(Acumatica.Default_24_200_001.Model.Address)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAddr"/> class.
            </summary>
            <param name="ad">The Address object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAddress">
            <summary>
            Converts an Addr object to an Address object.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAddress.#ctor(RevisionTwoApp.RestApi.Models.App.Addr)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAddress"/> class.
            </summary>
            <param name="ad">The Addr object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAR_Bill">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAR_Bill.#ctor(Acumatica.Default_24_200_001.Model.Bill)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAR_Bill"/> class.
            </summary>
            <param name="bill">The Bill object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToBill">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAR_BillDetail">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAR_BillDetail.#ctor(Acumatica.Default_24_200_001.Model.BillDetail)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToAR_BillDetail"/> class.
            </summary>
            <param name="bill">The BillDetail object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToBillDetail">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToBillDetail.#ctor(RevisionTwoApp.RestApi.Models.App.BillDetail_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToBillDetail"/> class.
            </summary>
            <param name="bill">The BillDetail_App object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCase_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCase_App.#ctor(Acumatica.Default_24_200_001.Model.Case)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCase_App"/> class.
            </summary>
            <param name="cr">The Case object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCase">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCase.#ctor(RevisionTwoApp.RestApi.Models.App.Case_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCase"/> class.
            </summary>
            <param name="cr">The Case_App object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCO">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCO.#ctor(Acumatica.Default_24_200_001.Model.Contact)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToCO"/> class.
            </summary>
            <param name="co">The Contact object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToContact">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToContact.#ctor(RevisionTwoApp.RestApi.Models.App.Contact_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToContact"/> class.
            </summary>
            <param name="co">The Contact_App object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToOP">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToOP.#ctor(Acumatica.Default_24_200_001.Model.Opportunity)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToOP"/> class.
            </summary>
            <param name="op">The Opportunity object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToOpportunity">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToOpportunity.#ctor(RevisionTwoApp.RestApi.Models.App.Opportunity_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToOpportunity"/> class.
            </summary>
            <param name="op">The Opportunity_App object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSO">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSO.#ctor(Acumatica.Default_24_200_001.Model.SalesOrder,Acumatica.Default_24_200_001.Model.BusinessAccount,Acumatica.RESTClient.ContractBasedApi.Model.DateTimeValue)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSO"/> class.
            </summary>
            <param name="so">The SalesOrder object to convert.</param>
            <param name="ba">The BusinessAccount object to use for customer name.</param>
            <param name="sp">The DateTimeValue object representing the shipment date.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSalesOrder">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSalesOrder.#ctor(RevisionTwoApp.RestApi.Models.App.SalesOrder_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSalesOrder"/> class.
            </summary>
            <param name="so">The SalesOrder_App object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSP">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSP.#ctor(Acumatica.Default_24_200_001.Model.Shipment)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSP"/> class.
            </summary>
            <param name="sp">The Shipment object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToShipment">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToShipment.#ctor(RevisionTwoApp.RestApi.Models.App.Shipment_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToShipment"/> class.
            </summary>
            <param name="sp">The Shipment_App object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSPDetail">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSPDetail.#ctor(Acumatica.Default_24_200_001.Model.ShipmentDetail)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToSPDetail"/> class.
            </summary>
            <param name="sp">The ShipmentDetail object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToShipmentDetail">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToShipmentDetail.#ctor(RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.DTOs.Conversions.ConvertToShipmentDetail"/> class.
            </summary>
            <param name="sp">The ShipmentDetail_App object to convert.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.Bill">
            <summary>
             mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.Type">
            <summary>
            The type of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.ReferenceNbr">
            <summary>
            The reference number of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.Status">
            <summary>
            The status of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.Date">
            <summary>
            The date of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.PostPeriod">
            <summary>
            The posting period of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.Vendor">
            <summary>
            The vendor associated with the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.Description">
            <summary>
            The description of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.VendorRef">
            <summary>
            The vendor reference for the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.Amount">
            <summary>
            The total amount of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.CurrencyID">
            <summary>
            The currency ID of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Bill.LastModifiedDateTime">
            <summary>
            The last modified date and time of the bill.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.Branch">
            <summary>
            The branch associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.InventoryID">
            <summary>
            The inventory ID associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.TransactionDescription">
            <summary>
            The transaction description for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.Qty">
            <summary>
            The quantity of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.UnitCost">
            <summary>
            The unit cost of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.Amount">
            <summary>
            The total amount of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.Account">
            <summary>
            The account associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.Description">
            <summary>
            The description of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.CostCode">
            <summary>
            The cost code associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.BillDetail.POOrderNbr">
            <summary>
            The purchase order number associated with the bill detail.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.Case">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.CaseID">
            <summary>
            The unique identifier for the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Subject">
            <summary>
            The subject of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.BusinessAccount">
            <summary>
            The business account associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.BusinessAccountName">
            <summary>
            The name of the business account associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Status">
            <summary>
            The status of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Reason">
            <summary>
            The reason for the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Severity">
            <summary>
            The severity of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Priority">
            <summary>
            The priority of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Owner">
            <summary>
            The owner of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Workgroup">
            <summary>
            The workgroup associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.ClassID">
            <summary>
            The class ID of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.Date">
            <summary>
            The date the case was created.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.LastActivityDate">
            <summary>
            The date of the last activity on the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Case.LastModifiedDateTime">
            <summary>
            The date and time the case was last modified.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.Contact">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.Active">
            <summary>
            Indicates whether the contact is active.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.ContactID">
            <summary>
            The unique identifier for the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.DisplayName">
            <summary>
            The display name of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.BusinessAccount">
            <summary>
            The business account associated with the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.JobTitle">
            <summary>
            The job title of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.Owner">
            <summary>
            The owner of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.CompanyName">
            <summary>
            The company name associated with the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.ContactClass">
            <summary>
            The contact class of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.Email">
            <summary>
            The email address of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.Phone1">
            <summary>
            The primary phone number of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Contact.LastModifiedDateTime">
            <summary>
            The date and time the contact was last modified.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.OpportunityID">
            <summary>
            The unique identifier for the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.Subject">
            <summary>
            The subject of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.Status">
            <summary>
            The status of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.Stage">
            <summary>
            The stage of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.CurrencyID">
            <summary>
            The currency ID of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.Total">
            <summary>
            The total amount of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.ClassID">
            <summary>
            The class ID of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.Owner">
            <summary>
            The owner of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.ContactID">
            <summary>
            The contact ID associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.ContactDisplayName">
            <summary>
            The display name of the contact associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.BusinessAccount">
            <summary>
            The business account associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Opportunity.LastModifiedDateTime">
            <summary>
            The date and time the opportunity was last modified.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.OrderType">
            <summary>
            The type of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.OrderNbr">
            <summary>
            The order number of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.Status">
            <summary>
            The status of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.Date">
            <summary>
            The date of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.CustomerID">
            <summary>
            The customer ID associated with the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.CustomerName">
            <summary>
            The name of the customer associated with the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.OrderedQty">
            <summary>
            The quantity ordered in the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.OrderTotal">
            <summary>
            The total amount of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.CurrencyID">
            <summary>
            The currency ID of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.LastModified">
            <summary>
            The date and time the sales order was last modified.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.SalesOrder.ShipmentDate">
            <summary>
            The shipment date of the sales order.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.Shipment">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.Type">
            <summary>
            The type of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.ShipmentNbr">
            <summary>
            The shipment number.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.Status">
            <summary>
            The status of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.ShipmentDate">
            <summary>
            The date of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.erID">
            <summary>
            The erID associated with the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.erName">
            <summary>
            The erName associated with the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.WarehouseID">
            <summary>
            The warehouse ID where the shipment is stored.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.ShippedQty">
            <summary>
            The quantity shipped.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.ShippedWeight">
            <summary>
            The weight of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.CreatedDateTime">
            <summary>
            The date and time the shipment was created.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.Shipment.LastModifiedDateTime">
            <summary>
            The date and time the shipment was last modified.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail.OrderType">
            <summary>
            The type of the order associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail.OrderNbr">
            <summary>
            The order number associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail.InventoryID">
            <summary>
            The inventory ID associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail.WarehouseID">
            <summary>
            The warehouse ID associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail.ShippedQty">
            <summary>
            The quantity shipped in the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail.OrderedQty">
            <summary>
            The quantity ordered in the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Entity_DTOs.ShipmentDetail.Description">
            <summary>
            The description of the shipment detail.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Helper.Combo_Boxes">
            <summary>
            Represents a collection of combo box data used for various entities such as bills, cases, contacts, opportunities,
            sales orders, and shipments.
            </summary>
            <remarks>This class provides predefined lists of items for combo boxes, categorized by entity type and
            purpose.  Each property contains a collection of strings or <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects that represent the
            available options for a specific entity. Use this class to populate UI elements like dropdowns or combo boxes with
            consistent and standardized data.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Bill_Types">
            <summary>
            Combo boxes for Bill creation
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Bill_Statuses">
            <summary>
            Gets or sets the statuses for bills.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Case_Statuses">
            <summary>
            Combo boxes for Case creation
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Case_Reasons">
            <summary>
            Gets or sets the reasons for cases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Case_Severity">
            <summary>
            Gets or sets the severity levels for cases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Case_Priorities">
            <summary>
            Gets or sets the priorities for cases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Case_ClassIDs">
            <summary>
            Gets or sets the class IDs for cases.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Contact_Classes">
            <summary>
            Combo boxes for Contact
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Opportunity_Statuses">
            <summary>
            Combo boxes for Opportunity
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Opportunity_Stages">
            <summary>
            Gets or sets the stages for opportunities.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Opportunity_ClassIDs">
            <summary>
            Gets or sets the class IDs for opportunities.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.SalesOrder_Types">
            <summary>
            Combo Boxes for SalesOrder
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.SalesOrder_Statuses">
            <summary>
            Combo Boxes for SalesOrder
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Shipment_Types">
            <summary>
            Combo Boxes for Shipments
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.Shipment_Statuses">
            <summary>
            Gets or sets the statuses for shipments.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Bill_Types">
            <summary>
            Gets the combo box items for bill types.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Bill_Statuses">
            <summary>
            Gets the combo box items for bill statuses.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Case_Statuses">
            <summary>
            Gets the combo box items for case statuses.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Case_Reasons">
            <summary>
            Gets the combo box items for case reasons.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Case_Severities">
            <summary>
            Gets the combo box items for case severities.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Case_Priorities">
            <summary>
            Gets the combo box items for case priorities.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Case_ClassIDs">
            <summary>
            Gets the combo box items for case class IDs.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Contact_Classes">
            <summary>
            Gets the combo box items for contact classes.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Opportunity_Statuses">
            <summary>
            Gets the combo box items for opportunity statuses.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Opportunity_Stages">
            <summary>
            Gets the combo box items for opportunity stages.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Opportunity_ClassIDs">
            <summary>
            Gets the combo box items for opportunity class IDs.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_SalesOrder_Types">
            <summary>
            Gets the combo box items for sales order types.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_SalesOrder_Statuses">
            <summary>
            Gets the combo box items for sales order statuses.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Shipment_Types">
            <summary>
            Gets the combo box items for shipment types.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Helper.Combo_Boxes.ComboBox_Shipment_Statuses">
            <summary>
            Gets the combo box items for shipment statuses.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Migrations.initialCreate">
            <inheritdoc />
        </member>
        <member name="M:RevisionTwoApp.RestApi.Migrations.initialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:RevisionTwoApp.RestApi.Migrations.initialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:RevisionTwoApp.RestApi.Migrations.initialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Addr">
            <summary>
            Represents an address with details such as street, city, state, country, and postal code.
            </summary>
            <remarks>This class is commonly used to store and manage address information for billing, shipping, or other
            purposes. It includes properties for both required and optional address components, such as AddressLine2 for
            additional details.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Addr.Id">
            <summary>
            Gets or sets the unique identifier for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Addr.AddressLine1">
            <summary>
            Gets or sets the first line of the address, such as street address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Addr.AddressLine2">
            <summary>
            Gets or sets the second line of the address, such as apartment, suite, or building.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Addr.City">
            <summary>
            Gets or sets the city of the address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Addr.Country">
            <summary>
            Gets or sets the country of the address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Addr.PostalCode">
            <summary>
            Gets or sets the postal code of the address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Addr.State">
            <summary>
            Gets or sets the state or province of the address.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Bill_App">
            <summary>
            Represents a bill in the application, including its details such as type, reference number, status, date, vendor,
            amount, and other related information.
            </summary>
            <remarks>This class is used to store and manage information about individual bills. It includes properties for
            identifying the bill, tracking its status, associating it with a vendor, and recording financial details such as the
            amount and currency.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.Id">
            <summary>
            Gets or sets the unique identifier for the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.Type">
            <summary>
            Gets or sets the type of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.ReferenceNbr">
            <summary>
            Gets or sets the reference number of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.Status">
            <summary>
            Gets or sets the status of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.Date">
            <summary>
            Gets or sets the date of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.PostPeriod">
            <summary>
            Gets or sets the post period of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.Vendor">
            <summary>
            Gets or sets the vendor associated with the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.Description">
            <summary>
            Gets or sets the description of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.VendorRef">
            <summary>
            Gets or sets the vendor reference number of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.Amount">
            <summary>
            Gets or sets the amount of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.CurrencyID">
            <summary>
            Gets or sets the currency identifier for the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Bill_App.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the bill.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.BillDetail_App">
            <summary>
            Represents the details of a bill, including associated branch, inventory, transaction information, and financial
            data.
            </summary>
            <remarks>This class is used to store and manage detailed information about a bill, such as quantities, costs,
            and accounts. It is typically used in financial or inventory management systems to track bill-related
            transactions.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.Id">
            <summary>
            Gets or sets the unique identifier for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.Branch">
            <summary>
            Gets or sets the branch associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.InventoryID">
            <summary>
            Gets or sets the inventory ID associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.TransactionDescription">
            <summary>
            Gets or sets the transaction description for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.Qty">
            <summary>
            Gets or sets the quantity for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.UnitCost">
            <summary>
            Gets or sets the unit cost for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.Amount">
            <summary>
            Gets or sets the amount for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.Account">
            <summary>
            Gets or sets the account associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.Description">
            <summary>
            Gets or sets the description for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.CostCode">
            <summary>
            Gets or sets the cost code for the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.BillDetail_App.POOrderNbr">
            <summary>
            Gets or sets the purchase order number for the bill detail.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Case_App">
            <summary>
             mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Id">
            <summary>
            Gets or sets the unique identifier for the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.CaseID">
            <summary>
            Gets or sets the case ID.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Subject">
            <summary>
            Gets or sets the subject of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.BusinessAccount">
            <summary>
            Gets or sets the business account ID associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.BusinessAccountName">
            <summary>
            Gets or sets the name of the business account associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Status">
            <summary>
            Gets or sets the status of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Reason">
            <summary>
            Gets or sets the reason for the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Severity">
            <summary>
            Gets or sets the severity of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Priority">
            <summary>
            Gets or sets the priority of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Owner">
            <summary>
            Gets or sets the owner of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.Workgroup">
            <summary>
            Gets or sets the workgroup associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.ClassID">
            <summary>
            Gets or sets the class ID of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.DateReported">
            <summary>
            Gets or sets the date the case was reported.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.LastActivityDate">
            <summary>
            Gets or sets the date of the last activity on the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Case_App.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the case.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Contact_App">
            <summary>
            Represents a contact entity with various attributes such as name, status, and associated account.
            </summary>
            <remarks>This class is designed to store and manage information about a contact, including identifiers, 
            display name, job title, and other metadata. It is commonly used in applications that handle  customer or business
            contact information.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.Id">
            <summary>
            Gets or sets the unique identifier for the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.Active">
            <summary>
            Gets or sets a value indicating whether the contact is active.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.ContactID">
            <summary>
            Gets or sets the contact ID.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.DisplayName">
            <summary>
            Gets or sets the display name of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.ContactClass">
            <summary>
            Gets or sets the class of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.BusinessAccount">
            <summary>
            Gets or sets the business account associated with the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.JobTitle">
            <summary>
            Gets or sets the job title of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.Owner">
            <summary>
            Gets or sets the owner of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.Status">
            <summary>
            Gets or sets the status of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Contact_App.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the contact.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Customer_App">
            <summary>
            Represents a customer application entity with properties for identifying and describing a customer.
            </summary>
            <remarks>This class is typically used to store and manage customer-related information, such as unique
            identifiers, customer IDs, and display names. It is designed to be used in database contexts where the <see
            cref="P:RevisionTwoApp.RestApi.Models.App.Customer_App.Id"/> property serves as the primary key.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Customer_App.Id">
            <summary>
            Gets or sets the unique identifier for the entity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Customer_App.CustomerID">
            <summary>
            Gets or sets the unique identifier for a customer.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Customer_App.CustomerName">
            <summary>
            Gets or sets the display name of the customer.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Opportunity_App">
            <summary>
            Represents an opportunity within the application, including details such as its unique identifier, status, stage,
            estimated close date, and associated contact or business account.
            </summary>
            <remarks>This class is used to model opportunities in the system, providing properties to store relevant
            information such as the opportunity's subject, total amount, owner, and other metadata. It is typically used in
            scenarios where opportunities need to be tracked, updated, or displayed in the application.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.Id">
            <summary>
            Gets or sets the unique identifier for the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.OpportunityID">
            <summary>
            Gets or sets the opportunity ID.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.Subject">
            <summary>
            Gets or sets the subject of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.Status">
            <summary>
            Gets or sets the status of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.Stage">
            <summary>
            Gets or sets the stage of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.Estimation">
            <summary>
            Gets or sets the estimated close date of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.CurrencyID">
            <summary>
            Gets or sets the currency identifier for the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.Total">
            <summary>
            Gets or sets the total amount of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.ClassID">
            <summary>
            Gets or sets the class ID of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.Owner">
            <summary>
            Gets or sets the owner of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.ContactID">
            <summary>
            Gets or sets the contact ID associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.ContactDisplayName">
            <summary>
            Gets or sets the display name of the contact associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.BusinessAccount">
            <summary>
            Gets or sets the business account associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Opportunity_App.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the opportunity.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.SalesOrder_App">
            <summary>
            Represents a sales order in the application, including details such as order type, customer information, 
            quantities, and financial data.
            </summary>
            <remarks>This class provides properties to store and retrieve information about a sales order, such as its
            unique  identifier, status, associated customer, and financial details. It is typically used to manage and track 
            sales orders within the system.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.Id">
            <summary>
            Gets or sets the unique identifier for the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.OrderType">
            <summary>
            Gets or sets the type of the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.OrderNbr">
            <summary>
            Gets or sets the order number.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.Status">
            <summary>
            Gets or sets the status of the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.Date">
            <summary>
            Gets or sets the date of the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.CustomerID">
            <summary>
            Gets or sets the customer ID associated with the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.CustomerName">
            <summary>
            Gets or sets the name of the customer associated with the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.OrderedQty">
            <summary>
            Gets or sets the quantity of items ordered.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.OrderTotal">
            <summary>
            Gets or sets the total amount of the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.CurrencyID">
            <summary>
            Gets or sets the currency identifier for the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.ShipmentDate">
            <summary>
            Gets or sets the shipment date for the order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.SalesOrder_App.LastModified">
            <summary>
            Gets or sets the last modified date of the order.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Shipment_App">
            <summary>
            Represents a shipment entity with details such as type, status, customer information, and shipment metrics.
            </summary>
            <remarks>This class is used to store and manage information related to shipments, including shipment
            identifiers,  customer details, shipment dates, and metrics such as quantity and weight. It is typically used in 
            applications that handle logistics or inventory management.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.Id">
            <summary>
            Gets or sets the unique identifier for the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.Type">
            <summary>
            Gets or sets the type of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.ShipmentNbr">
            <summary>
            Gets or sets the shipment number.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.Status">
            <summary>
            Gets or sets the status of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.ShipmentDate">
            <summary>
            Gets or sets the shipment date.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.CustomerID">
            <summary>
            Gets or sets the customer ID associated with the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.CustomerName">
            <summary>
            Gets or sets the customer name associated with the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.WarehouseID">
            <summary>
            Gets or sets the warehouse ID associated with the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.ShippedQty">
            <summary>
            Gets or sets the quantity shipped.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.ShippedWeight">
            <summary>
            Gets or sets the weight of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.CreatedDateTime">
            <summary>
            Gets or sets the date the shipment was created.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Shipment_App.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the shipment.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App">
            <summary>
            Represents the details of a shipment, including order information, inventory, warehouse, and quantities.
            </summary>
            <remarks>This class is used to store and manage information related to individual shipment details. It
            includes properties for identifying the shipment, tracking associated orders, and recording shipped and ordered
            quantities. Each instance corresponds to a specific shipment detail.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.Id">
            <summary>  
            Gets or sets the unique identifier for the shipment detail.  
            </summary>  
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.OrderType">
            <summary>  
            Gets or sets the type of the order associated with the shipment detail.  
            </summary>  
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.OrderNbr">
            <summary>  
            Gets or sets the order number associated with the shipment detail.  
            </summary>  
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.InventoryID">
            <summary>  
            Gets or sets the inventory ID associated with the shipment detail.  
            </summary>  
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.WarehouseID">
            <summary>  
            Gets or sets the warehouse ID associated with the shipment detail.  
            </summary>  
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.ShippedQty">
            <summary>  
            Gets or sets the quantity shipped in the shipment detail.  
            </summary>  
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.OrderedQty">
            <summary>  
            Gets or sets the quantity ordered in the shipment detail.  
            </summary>  
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.ShipmentDetail_App.Description">
            <summary>  
            Gets or sets the description of the shipment detail.  
            </summary>  
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.App.Address_App">
            <summary>
            Represents an address with details such as street, city, state, country, and postal code.
            </summary>
            <remarks>This class is designed to store and manage address information, including optional fields for 
            additional address lines. It can be used in applications requiring structured address data,  such as shipping,
            billing, or user profiles.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Address_App.Id">
            <summary>
            Gets or sets the unique identifier for the address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Address_App.AddressLine1">
            <summary>
            Gets or sets the first line of the address, such as street address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Address_App.AddressLine2">
            <summary>
            Gets or sets the second line of the address, such as apartment, suite, or building.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Address_App.City">
            <summary>
            Gets or sets the city of the address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Address_App.Country">
            <summary>
            Gets or sets the country of the address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Address_App.PostalCode">
            <summary>
            Gets or sets the postal code of the address.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.App.Address_App.State">
            <summary>
            Gets or sets the state or province of the address.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Credential">
            <summary>
            Represents the credentials required for accessing an ERP system.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.Id">
            <summary>
            Gets or sets the unique identifier for the credential.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.IsChecked">
            <summary>
            Gets or sets a value indicating whether the credential is selected.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.SiteUrl">
            <summary>
            Gets or sets the ERP instance URL.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.UserName">
            <summary>
            Gets or sets the ERP user name.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.Password">
            <summary>
            Gets or sets the password for the ERP user.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.Tenant">
            <summary>
            Gets or sets the tenant associated with the credential.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.Branch">
            <summary>
            Gets or sets the branch associated with the credential.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Credential.Locale">
            <summary>
            Gets or sets the locale associated with the credential.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.Bill_Model">
            <summary>
             mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.Type">
            <summary>
            Gets or sets the type of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.ReferenceNbr">
            <summary>
            Gets or sets the reference number of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.Status">
            <summary>
            Gets or sets the status of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.Date">
            <summary>
            Gets or sets the date of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.PostPeriod">
            <summary>
            Gets or sets the post period of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.Vendor">
            <summary>
            Gets or sets the vendor associated with the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.Description">
            <summary>
            Gets or sets the description of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.VendorRef">
            <summary>
            Gets or sets the vendor reference of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.Amount">
            <summary>
            Gets or sets the amount of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.CurrencyID">
            <summary>
            Gets or sets the currency ID of the bill.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Bill_Model.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the bill.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model">
            <summary>
             mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.Branch">
            <summary>
            Gets or sets the branch associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.InventoryID">
            <summary>
            Gets or sets the inventory ID associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.TransactionDescription">
            <summary>
            Gets or sets the transaction description of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.Qty">
            <summary>
            Gets or sets the quantity of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.UnitCost">
            <summary>
            Gets or sets the unit cost of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.Amount">
            <summary>
            Gets or sets the amount of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.Account">
            <summary>
            Gets or sets the account associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.Description">
            <summary>
            Gets or sets the description of the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.CostCode">
            <summary>
            Gets or sets the cost code associated with the bill detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.BillDetail_Model.POOrderNbr">
            <summary>
            Gets or sets the purchase order number associated with the bill detail.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.Case_Model">
            <summary>
             mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.CaseID">
            <summary>
            Gets or sets the unique identifier for the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.Subject">
            <summary>
            Gets or sets the subject of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.BusinessAccount">
            <summary>
            Gets or sets the business account associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.BusinessAccountName">
            <summary>
            Gets or sets the name of the business account associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.Status">
            <summary>
            Gets or sets the status of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.Reason">
            <summary>
            Gets or sets the reason for the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.Severity">
            <summary>
            Gets or sets the severity of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.Priority">
            <summary>
            Gets or sets the priority of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.Owner">
            <summary>
            Gets or sets the owner of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.Workgroup">
            <summary>
            Gets or sets the workgroup associated with the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.ClassID">
            <summary>
            Gets or sets the class ID of the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.DateReported">
            <summary>
            Gets or sets the date the case was reported.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.LastActivityDate">
            <summary>
            Gets or sets the date of the last activity on the case.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Case_Model.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the case.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.Contact_Model">
            <summary>
            Represents a contact entity with various attributes such as status, display name, and associated business account.
            </summary>
            <remarks>This model is typically used to store and manage information about a contact in a business context.
            It includes properties for identifying the contact, tracking its status, and associating it with other
            entities.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.Active">
            <summary>
            Gets or sets a value indicating whether the contact is active.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.ContactID">
            <summary>
            Gets or sets the unique identifier for the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.ContactClass">
            <summary>
            Gets or sets the class of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.DisplayName">
            <summary>
            Gets or sets the display name of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.BusinessAccount">
            <summary>
            Gets or sets the business account associated with the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.JobTitle">
            <summary>
            Gets or sets the job title of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.Owner">
            <summary>
            Gets or sets the owner of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.Status">
            <summary>
            Gets or sets the status of the contact.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Contact_Model.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the contact.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.Customer_Model">
            <summary>
            Represents a customer entity, including details about the customer's account, preferences, and associated data.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer"/> class provides properties and methods to manage
            customer-related information, such as account identifiers, billing and shipping details, financial preferences, and
            other attributes. This class is primarily used in business applications to handle customer data and
            interactions.</remarks>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer">
            <summary>
            Represents a customer entity, including details about the customer's account, preferences, and associated data.
            </summary>
            <remarks>The <see cref="T:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer"/> class provides properties and methods to manage customer-related
            information,  such as account identifiers, billing and shipping details, financial preferences, and other
            attributes. This class is primarily used in business applications to handle customer data and
            interactions.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.AccountRef">
            <summary>
            The external reference number of the business account.
            DAC Field Name: AcctReferenceNbr 
            DAC: PX.Objects.AR.Customer 
            Display Name: Ext Ref Nbr 
            SQL Type: nvarchar(50) 
            </summary>
            <remarks>
            It can be an additional number of the business account used in external integration.            
            </remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ApplyOverdueCharges">
            <summary>
            If set to true, indicates that financial chargescan be calculated for the customer.
            DAC Field Name: FinChargeApply 
            DAC: PX.Objects.AR.Customer 
            Display Name: Apply Overdue Charges 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.Attributes">
            <summary>
            Gets or sets the collection of attribute values associated with the entity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.AutoApplyPayments">
            <summary>
            If set to true, indicates that the payments of the customershould be automatically applied to the open invoices upon release.
            DAC: PX.Objects.AR.Customer 
            Display Name: Auto-Apply Payments 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.BAccountID">
            <summary>
            The identifier of the related business account.Along with ContactID, this field is used as an additional reference,but unlike RefNoteID and DocumentNoteID it is used for specific entities.
            DAC: PX.Objects.CR.CRPMTimeActivity 
            Display Name: Related Account 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.BillingAddressOverride">
            <summary>
            A calculated field. If set to false, indicates thatthe customer's billing address is the same as the customer'sdefault address.The field is populated by a formula, working only in the scope of the Customers (AR303000) form. See CustomerBillSharedAddressOverrideGraphExt"
            DAC Field Name: OverrideBillAddress 
            DAC: PX.Objects.AR.Customer 
            Display Name: Override 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.BillingContact">
            <summary>
            Gets or sets the billing contact information associated with the account.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.BillingContactOverride">
            <summary>
            A calculated field. If set to false, indicates that the customer's billing contact is the same as the customer'sdefault contact.The field is populated by a formula, working only in the scope of the Customers (AR303000) form. See CustomerBillSharedContactOverrideGraphExt"
            DAC Field Name: OverrideBillContact 
            DAC: PX.Objects.AR.Customer 
            Display Name: Override 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.Contacts">
            <summary>
            Gets or sets the collection of customer contacts associated with the entity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CreatedDateTime">
            <summary>
            The date and time when the record was created.
            DAC: PX.Objects.CR.Standalone.Location 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CreditVerificationRules">
            <summary>
            Gets or sets the credit verification rules used to validate credit-related operations.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CurrencyID">
            <summary>
            The identifier of the Currency,which is applied to the documents of the customer.
            DAC Field Name: CuryID 
            DAC: PX.Objects.AR.Customer 
            Display Name: Currency ID 
            SQL Type: nvarchar(5) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CurrencyRateType">
            <summary>
            The identifier of the currency rate type,which is applied to the documents of the customer.
            DAC Field Name: CuryRateTypeID 
            DAC: PX.Objects.AR.Customer 
            Display Name: Curr. Rate Type 
            SQL Type: nvarchar(6) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CustomerClass">
            <summary>
            Identifier of the customer class to which the customer belongs.
            DAC Field Name: CustomerClassID 
            DAC: PX.Objects.AR.Customer 
            Display Name: Customer Class 
            SQL Type: nvarchar(10) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CustomerID">
            <summary>
            The human-readable identifier of the customer account, which isspecified by the user or defined by the auto-numbering sequence duringcreation of the customer. This field is a natural key, as opposedto the surrogate key BAccountID.
            DAC Field Name: AcctCD 
            DAC: PX.Objects.AR.Customer 
            Display Name: Customer ID 
            SQL Type: nvarchar(30) 
            Key Field
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CustomerCategory">
            <summary>
            The customer kind, indicating whether the customer is an individual (I) or an organization (O).
            DAC: PX.Objects.AR.Customer 
            Display Name: Customer Category 
            SQL Type: char(1) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CustomerName">
            <summary>
            The full business account name (as opposed to the short identifier provided by AcctCD).
            DAC Field Name: AcctName 
            DAC: PX.Objects.AR.Customer 
            Display Name: Customer Name 
            SQL Type: nvarchar(255) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.Email">
            <summary>
            DAC: PX.Objects.CS.NotificationRecipient 
            SQL Type: nvarchar(MAX) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.EnableCurrencyOverride">
            <summary>
            If set to true, indicates that the currency of customer documents (which is specified by CuryID)can be overridden by a user during document entry.
            DAC Field Name: AllowOverrideCury 
            DAC: PX.Objects.AR.Customer 
            Display Name: Enable Currency Override 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.EnableRateOverride">
            <summary>
            If set to true, indicates that the currency ratefor customer documents (which is calculated by the system from the currency rate history) can be overridden by a user during document entry.
            DAC Field Name: AllowOverrideRate 
            DAC: PX.Objects.AR.Customer 
            Display Name: Enable Rate Override 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.EnableWriteOffs">
            <summary>
            If set to true, indicates that small balancewrite-offs are allowed for the customer.
            DAC Field Name: SmallBalanceAllow 
            DAC: PX.Objects.AR.Customer 
            Display Name: Enable Write-Offs 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.FOBPoint">
            <summary>
            The customer's FOB (free on board) shipping point.
            DAC Field Name: CFOBPointID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: FOB Point 
            SQL Type: nvarchar(15) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.LastModifiedDateTime">
            <summary>
            The date and time when the record was last modified.
            DAC: PX.Objects.CR.Standalone.Location 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.LeadTimedays">
            <summary>
            The amount of lead days (the time in days from the moment when the production was finished to the moment when the customer's order was delivered).
            DAC Field Name: CLeadTime 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Lead Time (Days) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.LocationName">
            <summary>
            The name of the location.
            DAC Field Name: Descr 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Location Name 
            SQL Type: nvarchar(60) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.MainContact">
            <summary>
            Gets or sets the primary contact associated with this entity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.MultiCurrencyStatements">
            <summary>
            If set to true, indicates that customerstatements should be generated for the customer in multi-currency format.
            DAC Field Name: PrintCuryStatements 
            DAC: PX.Objects.AR.Customer 
            Display Name: Multi-Currency Statements 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.OrderPriority">
            <summary>
            The order priority of the customer's location.
            DAC Field Name: COrderPriority 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Order Priority 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ParentRecord">
            <summary>
            The identifier of the parent business account.
            DAC Field Name: ParentBAccountID 
            DAC: PX.Objects.AR.Customer 
            Display Name: Parent Account 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.PaymentInstructions">
            <summary>
            Gets or sets the collection of payment instructions associated with the business account.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.PriceClassID">
            <summary>
            The price class of the customer.
            DAC Field Name: CPriceClassID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Price Class 
            SQL Type: nvarchar(10) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.PrimaryContact">
            <summary>
            Gets or sets the primary contact associated with this entity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.PrimaryContactID">
            <summary>
            The identifier of the Contact object linked with the business account and marked as primary.
            DAC: PX.Objects.AR.Customer 
            Display Name: Primary Contact 
            </summary>
            <remarks>
            Also, the Contact.BAccountID value must equal tothe BAccount.BAccountID value of the current business account.
            </remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.PrintDunningLetters">
            <summary>
            If set to true, indicates that dunning letters should be printed for the customer.
            DAC: PX.Objects.AR.Customer 
            Display Name: Print Dunning Letters 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.PrintInvoices">
            <summary>
            If set to true, indicates that invoicesshould be printed for the customer.
            DAC: PX.Objects.AR.Customer 
            Display Name: Print Invoices 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.PrintStatements">
            <summary>
            If set to true, indicates that customerstatements should be printed for the customer.
            DAC: PX.Objects.AR.Customer 
            Display Name: Print Statements 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ResidentialDelivery">
            <summary>
            This field indicates whether the residential delivery is available in this location.
            DAC Field Name: CResedential 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Residential Delivery 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.Salespersons">
            <summary>
            Gets or sets the collection of salespersons associated with the customer.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.SaturdayDelivery">
            <summary>
            This field indicates whether the Saturday delivery is available in this location.
            DAC Field Name: CSaturdayDelivery 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Saturday Delivery 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.SendDunningLettersbyEmail">
            <summary>
            If set to true, indicates that dunning letters should be sent to the customer by email.
            DAC Field Name: MailDunningLetters 
            DAC: PX.Objects.AR.Customer 
            Display Name: Send Dunning Letters by Email 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.SendInvoicesbyEmail">
            <summary>
            If set to true, indicates that invoicesshould be sent to the customer by email.
            DAC Field Name: MailInvoices 
            DAC: PX.Objects.AR.Customer 
            Display Name: Send Invoices by Email 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.SendStatementsbyEmail">
            <summary>
            DAC Field Name: SendStatementByEmail 
            DAC: PX.Objects.AR.Customer 
            Display Name: Send Statements by Email 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShippingAddressOverride">
            <summary>
            If set to true, indicates that the addressoverrides the default Address record, which isreferenced by DefAddressID.
            DAC Field Name: OverrideAddress 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Override 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShippingBranch">
            <summary>
            The identifier of the default branch of the customer location.
            DAC Field Name: CBranchID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Shipping Branch 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShippingContact">
            <summary>
            Gets or sets the contact information for shipping purposes.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShippingContactOverride">
            <summary>
            If set to true, indicates that the addressoverrides the default Contact record, which isreferenced by DefContactID.
            DAC Field Name: OverrideContact 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Override 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShippingRule">
            <summary>
            The shipping rule of the customer location.
            DAC Field Name: CShipComplete 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Shipping Rule 
            SQL Type: char(1) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShippingTerms">
            <summary>
            The customer's shipping terms.
            DAC Field Name: CShipTermsID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Shipping Terms 
            SQL Type: nvarchar(10) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShippingZoneID">
            <summary>
            The customer's shipping zone.
            DAC Field Name: CShipZoneID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Shipping Zone 
            SQL Type: nvarchar(15) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.ShipVia">
            <summary>
            The shipping carrier for the vendor location.
            DAC Field Name: CCarrierID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Ship Via 
            SQL Type: nvarchar(15) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.StatementCycleID">
            <summary>
            The identifier of the statement cycleto which the customer is assigned.
            DAC Field Name: StatementCycleId 
            DAC: PX.Objects.AR.Customer 
            Display Name: Statement Cycle ID 
            SQL Type: nvarchar(10) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.StatementType">
            <summary>
            The type of customer statements generated for the customer.The list of possible values of the field is determined by StatementTypeAttribute.
            DAC: PX.Objects.AR.Customer 
            Display Name: Statement Type 
            SQL Type: char(1) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.Status">
            <summary>
            DAC: PX.Objects.AR.Customer 
            Display Name: Customer Status 
            SQL Type: char(1) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.TaxRegistrationID">
            <summary>
            The registration ID of the company in the state tax authority.
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Tax Registration ID 
            SQL Type: nvarchar(50) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.TaxZone">
            <summary>
            The customer's tax zone.
            DAC Field Name: CTaxZoneID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Tax Zone 
            SQL Type: nvarchar(10) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.Terms">
            <summary>
            The identifier of the default terms, which are applied to the documents of the customer.
            DAC Field Name: TermsID 
            DAC: PX.Objects.AR.Customer 
            SQL Type: nvarchar(10) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.WarehouseID">
            <summary>
            The warehouse identifier of the customer location.
            DAC Field Name: CSiteID 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Warehouse 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.WriteOffLimit">
            <summary>
            If SmallBalanceAllow is set to true, thefield determines the maximum small balance write-off limit for customer documents.
            DAC Field Name: SmallBalanceLimit 
            DAC: PX.Objects.AR.Customer 
            Display Name: Write-Off Limit 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.RestrictVisibilityTo">
            <summary>
            DAC Field Name: COrgBAccountID 
            DAC: PX.Objects.AR.Customer 
            Display Name: Restrict Visibility To 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.CreditLimit">
            <summary>
            If CreditRule enables verification by credit limit,this field determines the maximum amount of credit allowed for the customer.
            DAC: PX.Objects.AR.Customer 
            Display Name: Credit Limit 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.NoteID">
            <summary>
            Gets or sets the unique identifier for the note.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.EntityUsageType">
            <summary>
            The customer's entity type for reporting purposes. This field is used if the system is integrated with External Tax Calculationand the External Tax Calculation Integration feature is enabled.
            DAC Field Name: CAvalaraCustomerUsageType 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Tax Exemption Type 
            SQL Type: char(1) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.TaxExemptionNumber">
            <summary>
            The Avalara Exemption number of the customer location.
            DAC Field Name: CAvalaraExemptionNumber 
            DAC: PX.Objects.CR.Standalone.Location 
            Display Name: Tax Exemption Number 
            SQL Type: nvarchar(30) 
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.IsGuestCustomer">
            <summary>
            Gets or sets a value indicating whether the customer is a guest.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Models.Default.Customer_Model.Customer.GetEndpointPath">
            <summary>
            Retrieves the default endpoint path for the entity.
            </summary>
            <remarks>This method returns a predefined endpoint path and does not perform any dynamic
            computation. It can be overridden in derived classes to provide a custom endpoint path.</remarks>
            <returns>A string representing the endpoint path in the format "entity/Default/24.200.001".</returns>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.OpportunityID">
            <summary>
            Gets or sets the unique identifier for the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.Subject">
            <summary>
            Gets or sets the subject of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.Status">
            <summary>
            Gets or sets the status of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.Stage">
            <summary>
            Gets or sets the stage of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.Estimation">
            <summary>
            Gets or sets the estimated date for the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.CurrencyID">
            <summary>
            Gets or sets the currency ID of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.Total">
            <summary>
            Gets or sets the total amount of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.ClassID">
            <summary>
            Gets or sets the class ID of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.Owner">
            <summary>
            Gets or sets the owner of the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.ContactID">
            <summary>
            Gets or sets the contact ID associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.ContactDisplayName">
            <summary>
            Gets or sets the display name of the contact associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.BusinessAccount">
            <summary>
            Gets or sets the business account associated with the opportunity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Opportunity_Model.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the opportunity.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.OrderType">
            <summary>
            Gets or sets the type of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.OrderNbr">
            <summary>
            Gets or sets the number of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.Status">
            <summary>
            Gets or sets the status of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.Date">
            <summary>
            Gets or sets the date of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.CustomerID">
            <summary>
            Gets or sets the customer ID associated with the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.CustomerName">
            <summary>
            Gets or sets the name of the customer associated with the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.OrderedQty">
            <summary>
            Gets or sets the ordered quantity of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.OrderTotal">
            <summary>
            Gets or sets the total amount of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.CurrencyID">
            <summary>
            Gets or sets the currency ID of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.LastModified">
            <summary>
            Gets or sets the last modified date and time of the sales order.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.SalesOrder_Model.ShipmentDate">
            <summary>
            Gets or sets the shipment date of the sales order.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.Shipment_Model">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.Type">
            <summary>
            Gets or sets the type of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.ShipmentNbr">
            <summary>
            Gets or sets the shipment number.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.Status">
            <summary>
            Gets or sets the status of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.ShipmentDate">
            <summary>
            Gets or sets the shipment date.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.erID">
            <summary>
            Gets or sets the erID of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.erName">
            <summary>
            Gets or sets the erName of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.WarehouseID">
            <summary>
            Gets or sets the warehouse ID of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.ShippedQty">
            <summary>
            Gets or sets the shipped quantity.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.ShippedWeight">
            <summary>
            Gets or sets the shipped weight.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.CreatedDateTime">
            <summary>
            Gets or sets the created date and time of the shipment.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.Shipment_Model.LastModifiedDateTime">
            <summary>
            Gets or sets the last modified date and time of the shipment.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model">
            <summary>
             Mapping class for standard output form
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model.OrderType">
            <summary>
            Gets or sets the type of the order associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model.OrderNbr">
            <summary>
            Gets or sets the number of the order associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model.InventoryID">
            <summary>
            Gets or sets the inventory ID associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model.WarehouseID">
            <summary>
            Gets or sets the warehouse ID associated with the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model.ShippedQty">
            <summary>
            Gets or sets the shipped quantity of the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model.OrderedQty">
            <summary>
            Gets or sets the ordered quantity of the shipment detail.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Models.Default.ShipmentDetail_Model.Description">
            <summary>
            Gets or sets the description of the shipment detail.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToBill_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToBill_Model">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Create_Bill_Model">
            <summary>
            Create custom Default model from API Response, add new properties
            potentially from other Default Models by constructor
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToBillDetail_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToBillDetail_Model">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Create_BillDetail_Model">
            <summary>
            Create custom Default model from API Response, add new properties
            potentially from other Default Models by constructor
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToCase_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToCase_Model">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Models.ToCase_Model.#ctor(RevisionTwoApp.RestApi.Models.App.SalesOrder_App)">
            <summary>
            Initializes a new instance of the <see cref="T:RevisionTwoApp.RestApi.Models.ToCase_Model"/> class.
            </summary>
            <param name="Case_App">The SalesOrder_App instance. Currently unused.</param>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToContact_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToContact_Model">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Create_Contact_Model">
            <summary>
            Create custom Default model from API Response, add new properties
            potentially from other Default Models by constructor
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToOpportunity_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToOpportunity_Model">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Create_Opportunity_Model">
            <summary>
            Create custom Default model from API Response, add new properties
            potentially from other Default Models by constructor
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToSalesOrder_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToSalesOrder_Model">
            <summary>
            Conversion to Default model from App model using inheritance and
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Create_SalesOrder_Model">
            <summary>
            Create custom Default model from API Response, add new properties
            potentially from other Default Models by constructor
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToShipment_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToShipment_Model">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Create_Shipment_Model">
            <summary>
            Create custom Default model from API Response, add new properties
            potentially from other Default Models by constructor
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToShipmentDetail_App">
            <summary>
            Conversion to App model from Default model using inheritance 
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.ToShipmentDetail_Model">
            <summary>
            Conversion to Default model from App model using inheritance
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Models.Create_ShipmentDetail_Model">
            <summary>
            Create custom Default model from API Response, add new properties
            potentially from other Default Models by constructor
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Pages.ErrorModel">
            <summary>
            Represents the model for handling error pages in the application.
            </summary>
            <remarks>This model is used to display error information, including the request ID, on error pages. It also
            logs error details for diagnostic purposes.</remarks>
            <param name="logger"></param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.ErrorModel.#ctor(Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Pages.ErrorModel})">
            <summary>
            Represents the model for handling error pages in the application.
            </summary>
            <remarks>This model is used to display error information, including the request ID, on error pages. It also
            logs error details for diagnostic purposes.</remarks>
            <param name="logger"></param>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Pages.ErrorModel.RequestId">
            <summary>
            Gets or sets the unique identifier for the current request.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Pages.ErrorModel.ShowRequestId">
            <summary>
            Indicates whether the current request ID should be displayed.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.ErrorModel.OnGet">
            <summary>
            Handles GET requests for the error page.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Pages.IndexModel">
            <summary>
            Represents the model for the Index page in an ASP.NET Core Razor Pages application. 
            </summary>
            <remarks>This class is responsible for handling the logic and data associated with the Index page. It includes
            a method to handle GET requests and logs when the page is loaded.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.IndexModel.#ctor(Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Pages.IndexModel})">
            <summary>
            Represents the model for the Index page in an ASP.NET Core Razor Pages application. 
            </summary>
            <remarks>This class is responsible for handling the logic and data associated with the Index page. It includes
            a method to handle GET requests and logs when the page is loaded.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.IndexModel.OnGet">
            <summary>
            Handles GET requests for the Index page.
            </summary>
            <remarks>This method is invoked when the Index page is accessed via a GET request. It logs a message indicating that the page has been loaded.</remarks>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Pages.PrivacyModel">
            <summary>
            Represents the model for the Privacy page in the application.
            </summary>
            <remarks>This class is used to handle requests and responses for the Privacy page. It logs an informational
            message when the page is accessed.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.PrivacyModel.#ctor(Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Pages.PrivacyModel})">
            <summary>
            Represents the model for the Privacy page in the application.
            </summary>
            <remarks>This class is used to handle requests and responses for the Privacy page. It logs an informational
            message when the page is accessed.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.PrivacyModel.OnGet">
            <summary>
            Handles GET requests for the Privacy page.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Pages.TermsModel">
            <summary>
            Represents the model for the Terms page in an ASP.NET Core Razor Pages application.
            </summary>
            <remarks>This class is responsible for handling the GET requests to the Terms page. It logs an informational
            message when the page is accessed.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.TermsModel.#ctor(Microsoft.Extensions.Logging.ILogger{RevisionTwoApp.RestApi.Pages.TermsModel})">
            <summary>
            Represents the model for the Terms page in an ASP.NET Core Razor Pages application.
            </summary>
            <remarks>This class is responsible for handling the GET requests to the Terms page. It logs an informational
            message when the page is accessed.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Pages.TermsModel.OnGet">
            <summary>
            Handles GET requests to the Terms page.
            </summary>
        </member>
        <member name="T:RevisionTwoApp.RestApi.Settings.Globals">
            <summary>
            Provides a container for global properties and methods to manage their initialization and reset.
            </summary>
            <remarks>This class is intended for internal use only and serves as a centralized location for managing global
            properties. It includes methods to initialize and reset the properties, ensuring proper setup and maintenance of the
            global state.</remarks>
        </member>
        <member name="F:RevisionTwoApp.RestApi.Settings.Globals._globalProperties">
            <summary>
            Represents a two-dimensional array of global properties.
            </summary>
            <remarks>This field is intended for internal use only and stores a two-dimensional array of objects. It is
            initialized to its default value.</remarks>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Settings.Globals.FromDate">
            <summary>
            Gets or sets the starting date for the operation or data range.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Settings.Globals.ToDate">
            <summary>
            Gets or sets the date value representing the latest date in a date range.
            </summary>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Settings.Globals.NumRecords">
            <summary>
            Gets or sets the total number of records processed or available.
            </summary>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.InitializeProperties">
            <summary>
            Initializes a collection of global properties with their default values.
            </summary>
            <remarks>This method creates and returns a list of key-value pairs representing global properties. Each
            property is initialized with a default value, which can be used to configure application-wide settings.</remarks>
            <returns>A list of <see cref="T:System.Tuple`2"/> objects, where each tuple contains a property name (as an <see
            cref="T:System.Object"/>)  and its corresponding default value (as an <see cref="T:System.Object"/>).</returns>
        </member>
        <member name="P:RevisionTwoApp.RestApi.Settings.Globals.GlobalProperties">
            <summary>
            Gets a list of global properties represented as key-value pairs.
            </summary>
            <remarks>The global properties are lazily initialized when accessed. If the list is empty or
            uninitialized, it will be populated by the <c>InitializeProperties</c> method.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.GetGlobalProperties">
            <summary>
            Retrieves a list of global properties as key-value pairs.
            </summary>
            <remarks>This method returns a list of tuples representing global properties, where each tuple
            contains a key and its associated value. If the global properties have not been initialized or are empty, they
            are initialized before being returned.</remarks>
            <returns>A list of <see cref="T:System.Tuple`2"/> objects, where each tuple contains a key and its associated value. The
            list will be empty if no global properties are available.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.GetGlobalProperty(System.String)">
            <summary>
            Retrieves the value of a global property by its name.
            </summary>
            <remarks>This method searches for a global property by name and returns its value if found. If the
            property does not exist, an <see cref="T:System.ArgumentException"/> is thrown.</remarks>
            <param name="propertyName">The name of the global property to retrieve. This parameter is case-sensitive and cannot be null or empty.</param>
            <returns>The value of the global property associated with the specified name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the specified <paramref name="propertyName"/> does not exist in the global properties.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.GetGlobalProperty(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Retrieves the value of a global property by its name.
            </summary>
            <remarks>If the specified property name does not exist in the global properties collection, a warning
            is logged using the provided <paramref name="logger"/>.</remarks>
            <param name="propertyName">The name of the global property to retrieve. This parameter cannot be null or empty.</param>
            <param name="logger">An <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used to log warnings if the specified property is not found.</param>
            <returns>The value of the global property if found; otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.LogGlobalProperties(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Logs all global properties to the specified logger.
            </summary>
            <remarks>This method formats the global properties as a comma-separated list and logs them as an
            informational message.</remarks>
            <param name="logger">The logger instance used to log the global properties. Cannot be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.LogGlobalProperty(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Logs the value of a global property with the specified name using the provided logger.
            </summary>
            <remarks>If the specified global property is found, its name and value are logged as informational
            messages. If the property is not found, a warning message is logged instead.</remarks>
            <param name="propertyName">The name of the global property to log. This value is case-sensitive.</param>
            <param name="logger">The logger instance used to log the property information. Cannot be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.SetGlobalProperties(System.Collections.Generic.List{System.Tuple{System.Object,System.Object}})">
            <summary>
            Sets the global properties for the application.
            </summary>
            <remarks>This method updates the global properties with the provided list of key-value pairs. Ensure
            that the list contains valid entries, as the method does not perform additional validation on the individual
            keys or values.</remarks>
            <param name="properties">A list of key-value pairs representing the global properties to set.  Each tuple contains an object as the key
            and an object as the value.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="properties"/> is null or empty.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.SetGlobalProperties(System.Collections.Generic.List{System.Tuple{System.Object,System.Object}},Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Sets global properties for the application.
            </summary>
            <remarks>This method updates the global properties for the application and logs the operation. Ensure
            that the <paramref name="properties"/> list contains valid key-value pairs.</remarks>
            <param name="properties">A list of key-value pairs representing the global properties to set.  Each tuple contains an object key and an
            object value. The list cannot be null or empty.</param>
            <param name="logger">The logger instance used to log information about the operation.  Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="properties"/> is null or empty.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.SetGlobalProperty(System.String,System.Object)">
            <summary>
            Updates the value of an existing global property.
            </summary>
            <remarks>This method searches for a global property by its name and updates its value if found.  If
            the property does not exist, an <see cref="T:System.ArgumentException"/> is thrown.</remarks>
            <param name="propertyName">The name of the global property to update. This must match the name of an existing property.</param>
            <param name="value">The new value to assign to the specified global property.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="propertyName"/> does not match any existing global property.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.SetGlobalProperty(System.String,System.Object,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Updates the value of an existing global property.
            </summary>
            <remarks>This method searches for a global property by name and updates its value. If the property is found, 
            the update is logged using the provided <paramref name="logger"/>. If the property does not exist,  an exception is
            thrown.</remarks>
            <param name="propertyName">The name of the global property to update. Must match an existing property.</param>
            <param name="value">The new value to assign to the specified global property.</param>
            <param name="logger">An <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used to log the update operation. Cannot be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="propertyName"/> does not match any existing global property.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.ResetGlobalProperties">
            <summary>
            Resets the global properties to their default values.
            </summary>
            <remarks>This method initializes global properties to their default state.  The default values include
            a date range spanning the last 90 days,  a default number of records set to 10, and other properties initialized
            as required.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.ResetGlobalPropertyFlags">
            <summary>
            Resets global property flags to their default values.
            </summary>
            <remarks>This method sets the global properties "RefreshFlag", "EditFlag", and "DeleteFlag" to <see
            langword="false"/>. It is intended to restore the default state of these flags.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.ResetGlobalPropertyFlags(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Resets global property flags to their default values and logs the updated state.    
            </summary>
            <param name="logger">The logger used to record the updated state of the global property flags. Cannot be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.ClearGlobalProperties">
            <summary>
            Clears all global properties and resets them to their default state.
            </summary>
            <remarks>This method removes all entries from the global properties collection and reinitializes  them
            to their default values. It is typically used to ensure a clean state for global properties.</remarks>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.AddGlobalProperty(System.String,System.Object)">
            <summary>
            Adds a global property to the internal collection.
            </summary>
            <remarks>This method stores the specified property name and value in an internal collection. The
            collection is initialized if it has not been created yet.</remarks>
            <param name="propertyName">The name of the property to add. Cannot be <see langword="null"/> or empty.</param>
            <param name="value">The value associated with the property. Can be <see langword="null"/>.</param>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.AddGlobalProperty(System.String,System.Object,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Adds a global property to the internal collection.
            </summary>
            <remarks>This method adds the specified property name and value to an internal collection of global
            properties. The addition is logged using the provided <paramref name="logger"/>.</remarks>
            <param name="propertyName">The name of the property to add. Cannot be <see langword="null"/> or empty.</param>
            <param name="value">The value associated with the property. Can be <see langword="null"/>.</param>
            <param name="logger">The logger used to record the addition of the property. Cannot be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.RemoveGlobalProperty(System.String)">
            <summary>
            Removes a global property with the specified name.
            </summary>
            <remarks>This method searches for a global property by name and removes it if found. If no matching
            property exists, an exception is thrown.</remarks>
            <param name="propertyName">The name of the global property to remove. This value is case-sensitive and must match the name of an existing
            property.</param>
            <exception cref="T:System.ArgumentException">Thrown if a global property with the specified <paramref name="propertyName"/> does not exist.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.RemoveGlobalProperty(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Removes a global property with the specified name from the collection of global properties.
            </summary>
            <remarks>If the specified property is found, it is removed from the collection, and an informational
            log entry is created. If the property is not found, a warning log entry is created instead.</remarks>
            <param name="propertyName">The name of the global property to remove. This value is case-sensitive.</param>
            <param name="logger">The logger used to record information or warnings about the operation. Cannot be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.RemoveGlobalProperty(System.String,Microsoft.Extensions.Logging.ILogger,System.Boolean)">
            <summary>
            Removes a global property with the specified name.
            </summary>
            <remarks>If the specified property is found, it is removed and an informational message is logged. If
            the property is not found and <paramref name="logWarningIfNotFound"/> is <see langword="true"/>, a warning
            message is logged.</remarks>
            <param name="propertyName">The name of the global property to remove. This parameter is case-sensitive.</param>
            <param name="logger">The logger instance used to log informational or warning messages. Cannot be <see langword="null"/>.</param>
            <param name="logWarningIfNotFound">Indicates whether a warning should be logged if the specified property is not found. Defaults to <see
            langword="true"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.RemoveGlobalProperty(System.Tuple{System.Object,System.Object},Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Removes a specified global property from the collection of global properties.
            </summary>
            <remarks>If the specified global property exists in the collection, it is removed and an informational
            log entry is created. If the property does not exist, a warning log entry is created.</remarks>
            <param name="property">A tuple representing the global property to remove. The first item is the property key, and the second item is
            the property value.</param>
            <param name="logger">An <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used to log information or warnings about the removal operation. Cannot be
            <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:RevisionTwoApp.RestApi.Settings.Globals.GetTupleByName(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Logs information about a global property based on its name.
            </summary>
            <remarks>If a global property matching <paramref name="propertyName"/> is found, its name and value
            are logged as  informational messages. If no matching property is found, a warning message is logged
            instead.</remarks>
            <param name="propertyName">The name of the global property to search for. This parameter cannot be null or empty.</param>
            <param name="logger">The logger used to record information or warnings about the global property. This parameter cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="logger"/> is null.</exception>
        </member>
    </members>
</doc>
